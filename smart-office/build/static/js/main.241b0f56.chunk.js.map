{"version":3,"sources":["resources/images/logo.svg","model/Element.jsx","config.jsx","Components/Item.jsx","Components/Main.jsx","model/AppContext.jsx","Components/SideBarHeader.jsx","Components/SideBarCategory.jsx","model/SNotification.jsx","Components/SideBarInitial.jsx","Components/SideBarItem.jsx","Components/SideBar.jsx","Components/NavBar.jsx","Components/RequestItemPopup.jsx","Components/ActionItemPopupConfirmation.jsx","Components/FewLeftPopup.jsx","Components/AllNotificationsPopup.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Element","object","_this","this","Object","classCallCheck","chosen","ID","hasOwnProperty","type","name","image","parentID","elements","data","length","i","push","quantity","notifications","_quantity","value","_parentID","_elements","_type","_name","_image","_ID","_chosen","Config","loadElementsFromLocal","require","e","console","error","HTTP_REQUEST_STATUS_OK","HTTP_REQUEST_STATUS_CREATED","HTTP_REQUEST_STATUS_BAD_REQUEST","HTTP_REQUEST_STATUS_NO_CONTENT","HTTP_REQUEST_STATUS_NOT_FOUND","ELEMENT_TYPE_CATEGORY","ELEMENT_TYPE_ITEM","STATION_ID","API_GLOBAL_RETRIEVE","API_ROOT","API_REQUEST_SEND","API_NOTIFICATION_SEND","loadElementsFromAPI","Promise","resolve","reject","axios","get","then","response","status","parseInt","log","catch","finally","generateAppContextValues","globalScope","station","state","doChangeIsSafeToUpdateUniverse","setState","isSafeToUpdateUniverse","doGetIsSafeToUpdateUniverse","doUpdateUniverse","bind","startLoading","loading","stopLoading","doNotificationSend","loadNotifications","items","j","loadItems","sub_elements","isEmpty","undefined","key","constructor","Array","test","String","err","flattenElements","initial","flat","flat_children","keys","forEach","Item","onItemClick","props","click","item","classList","footerIcon","react_default","a","createElement","onClick","sideBarCheck","className","join","src","alt","Component","Main","getParent","V","found","_this2","breadcrumbs","localChosen","localElementsContainer","reverse","map","element","Components_Item","AppContext","React","createContext","scope","SideBarHeader","building","floor","context","table","onToggleMobileDrawer","contextType","SideBarCategory","actions","getInstructions","onClickDiscardSearch","SNotification","createdAt","content","itemID","_content","_createdAt","_itemID","date","Moment","ISO_8601","format","SideBarInitial","numberOfShownNotifications","itemName","timeStamp","message","getItemNameById","itemsFlat","getNotificationsFromManagement","printDate","notification","parseDate","getFirstNotifications","number","onClickSearch","onClickRequest","onClickNotifications","slice","elementId","toString","SideBarItem","getItemNotifications","itemId","onActionConfirmation","onClickFew","SideBar","Components_SideBarInitial","Components_SideBarItem","Components_SideBarCategory","id","Components_SideBarHeader","getTypeOfSidebar","NavBar","possibleConstructorReturn","getPrototypeOf","call","onClickGoBack","onClickOption","resetValue","inputValue","searchInName","toLowerCase","indexOf","pressed","setWrapperRef","assertThisInitialized","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","target","discardSearch","evt","style","right","Logo","onToggleNotificationPopup","placeholder","onClickNavBar","onChange","updateInputValue","navBarClick","assign","ref","searchBarItems","flag","_this3","RequestItemPopup","request_name","createRef","request_description","request_badge","request_modal","togglePopup","self","current","description","badge","add","remove","post","stationId","onSubmit","htmlFor","doRequest","ActionItemPopupConfirmation","setTimeout","onReturnToDashboard","FewLeftPopup","input","valid","backSpace","updateValid","clear","button","createKey","digit","_this4","createKeys","data-active","onConfirm","AllNotificationsPopup","sortNotifications","ok","aux","App","toggleRequestPopup","showRequestPopup","toggleFewLeftPopup","showFewLeftPopup","toggleActionConfirmationPopup","force","arguments","showActionConfirmationPopup","toggleNotificationsPopup","showNotificationsPopup","onItemClickMaiSmechera","previousState","onNavBarClick","drawer_visible","onRequestSubmit","onFewLeftSubmit","amount","alert","JSON","stringify","timeoutActionConfirmationPopup","setInterval","model_AppContext","Provider","Components_NavBar","Components_Main","data-visible","Components_SideBar","Components_RequestItemPopup","Components_ActionItemPopupConfirmation","Components_FewLeftPopup","Components_AllNotificationsPopup","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,y8ICsGzBC,aA/Bb,SAAAA,EAAYC,GAAQ,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GACH,OAAXC,IACJE,KAAKG,QAAS,EACdH,KAAKI,GAAKN,EAAOO,eAAe,MAAQP,EAAM,GAAS,KACvDE,KAAKM,KAAOR,EAAOO,eAAe,QAAUP,EAAM,KAAW,KAC7DE,KAAKO,KAAOT,EAAOO,eAAe,QAAUP,EAAM,KAAW,KAC7DE,KAAKQ,MAAQV,EAAOO,eAAe,SAAWP,EAAM,MAAY,KAChEE,KAAKS,SAAWX,EAAOO,eAAe,YAAcP,EAAM,SAAe,KACzEE,KAAKU,SAAY,WACf,IAAIC,EAAO,GACPD,EAAWZ,EAAOO,eAAe,YAAcP,EAAM,SAAe,GACxE,GAAIY,GAAYA,EAASE,OAAS,EAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASE,OAAQC,IACnCF,EAAKG,KAAK,IAAIjB,EAAQa,EAASG,KACnC,OAAOF,EANQ,GASjBX,KAAKe,SAAWf,KAAKU,SAASE,OAE9BZ,KAAKgB,cAAiB,WACpB,IAAIL,EAAO,GACPK,EAAgBlB,EAAOO,eAAe,YAAcP,EAAM,SAAe,GAC7E,GAAIkB,GAAiBA,EAAcJ,OAAS,EAAG,IAAK,IAAIC,EAAI,EAAGA,EAAIG,EAAcJ,OAAQC,IACvFG,EAAcH,GAAd,UAAgCd,EAAKK,GACrCO,EAAKG,KAAKE,EAAcH,IAE1B,OAAOF,EAPa,yDAtFtB,OAAOX,KAAKiB,wBAGDC,GACXlB,KAAKiB,UAAYC,mCAIjB,OAAOlB,KAAKmB,wBAGDD,GACXlB,KAAKmB,UAAYD,mCAQjB,OAAOlB,KAAKoB,wBAODF,GACXlB,KAAKoB,UAAYF,+BAGjB,OAAOlB,KAAKqB,oBAGLH,GACPlB,KAAKqB,MAAQH,+BAIb,OAAOlB,KAAKsB,oBAGLJ,GACPlB,KAAKsB,MAAQJ,gCAGb,OAAOlB,KAAKuB,qBAGJL,GACRlB,KAAKuB,OAASL,6BAId,OAAOlB,KAAKwB,kBAEPpB,GACLJ,KAAKwB,IAAMpB,iCAIX,OAAOJ,KAAKyB,sBAGHP,GACTlB,KAAKyB,QAAUP,WClEbQ,wCAwHJC,sBAAwB,WAKtB,IACE,IAAIjB,EAAWkB,EAAQ,IACvB,GAAIlB,EAAU,CAEZ,IADA,IAAIC,EAAO,GACFE,EAAI,EAAGA,EAAIH,EAASE,OAAQC,IACnCF,EAAKG,KAAK,IAAIjB,EAAQa,EAASG,KAEjC,OAAOF,GAET,MAAOkB,GACPC,QAAQC,MAAMF,GAEhB,MAAO,KAzILH,EACGM,uBAAyB,IAD5BN,EAEGO,4BAA8B,IAFjCP,EAGGQ,gCAAkC,IAHrCR,EAIGS,+BAAiC,IAJpCT,EAKGU,8BAAgC,IALnCV,EAOGW,sBAAwB,WAP3BX,EAQGY,kBAAoB,OARvBZ,EAUGa,WAAa,2BAVhBb,EAYGc,qBAZHd,EAWGe,SAAW,mDAC6B,iBAZ3Cf,EAaGgB,iBAAmBhB,EAAOe,SAAW,oBAbxCf,EAcGiB,sBAAwBjB,EAAOe,SAAW,yBAd7Cf,EAgBGkB,oBAAsB,WAC3B,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,IACGC,IAAIvB,EAAOc,oBAAsBd,EAAOa,YACxCW,KAAK,SAAAC,GACJ,IACE,IAAIC,EAASD,EAAQ,OACjBE,SAASD,KAAY1B,EAAOM,yBAC9BF,QAAQwB,IAAIH,GACZL,EAAQK,EAAQ,OAElB,MAAOtB,GACPC,QAAQC,MAAM,0BACdD,QAAQC,MAAMF,GACdkB,OAGHQ,MAAM,SAAAxB,GACLD,QAAQwB,IAAIvB,GACZgB,MAEDS,QAAQ,iBArCX9B,EA2CG+B,yBAA2B,SAAAC,GAChC,MAAO,CACLC,QAASD,EAAYE,MAAMD,QAC3BE,+BAAgC,SAAA3C,GAC9BwC,EAAYI,SAAS,CAAEC,wBAAkC,IAAV7C,KAEjD8C,4BAA6B,WAC3B,OAAON,EAAYE,MAAMG,wBAE3BE,iBAAkBP,EAAYO,iBAAiBC,KAAKR,GACpDS,aAAc,WACZT,EAAYI,SAAS,CAAEM,SAAS,KAElCC,YAAa,WACXX,EAAYI,SAAS,CAAEM,SAAS,KAElCE,mBAAoBZ,EAAYY,mBAAmBJ,KAAKR,KA3DxDhC,EAmEG6C,kBAAoB,SAAAC,GAEzB,IADA,IAAIxD,EAAgB,GACXH,EAAI,EAAGA,EAAI2D,EAAM5D,OAAQC,IAChC,IAAK,IAAI4D,EAAI,EAAGA,EAAID,EAAM3D,GAAGG,cAAcJ,OAAQ6D,IACjDD,EAAM3D,GAAGG,cAAcyD,GAAvB,UAAyCD,EAAM3D,GAAGT,GAClDY,EAAcF,KAAK0D,EAAM3D,GAAGG,cAAcyD,IAE9C,OAAOzD,GA1ELU,EA6EGgD,UAAY,SAAAhE,GAEjB,IADA,IAAI8D,EAAQ,GACH3D,EAAI,EAAGA,EAAIH,EAASE,OAAQC,IACnC,GAAyB,aAArBH,EAASG,GAAGP,KAEd,IADA,IAAIqE,EAjFNjD,EAiF0BgD,UAAUhE,EAASG,GAAGH,UACrC+D,EAAI,EAAGA,EAAIE,EAAa/D,OAAQ6D,IACvCD,EAAM1D,KAAK6D,EAAaF,SAE1BD,EAAM1D,KAAKJ,EAASG,IAExB,OAAO2D,GAvFL9C,EA0FGkD,QAAU,SAAA1D,GACf,IACE,QAAc2D,IAAV3D,GAAwC,qBAAVA,GAAmC,OAAVA,EACzD,OAAO,EAGT,GAAqB,kBAAVA,GACT,IAAK,IAAI4D,KAAO5D,EAAO,QAAY2D,IAARC,EAAmB,OAAO,MAGlD,IAAI5D,EAAM6D,cAAgBC,MAK7B,MAAc,MAAV9D,GAA2B,IAAVA,IAAyB,IAAVA,IAA6B,IAAVA,KAE/CA,GAAS,QAAQ+D,KAAKC,OAAOhE,KANrC,GAAqB,IAAjBA,EAAMN,OAAc,OAAO,GAQjC,MAAOuE,GACPrD,QAAQC,MAAMoD,GAGhB,OAAO,GAjHLzD,EAoJG0D,gBAAkB,SAAAC,GAEvB,IADA,IAAIC,EAAO,GACFzE,EAAI,EAAGA,EAAIwE,EAAQzE,OAAQC,IAClCyE,EAAKJ,OAAOG,EAAQxE,GAAGT,KAAOiF,EAAQxE,IAEnCa,EAAOkD,QAAQS,EAAQxE,GAAGH,WAC3B2E,EAAQxE,GAAGH,SAASE,OAAS,GAC7B,WACA,IAAI2E,EA5JN7D,EA4J2B0D,gBAAgBC,EAAQxE,GAAGH,UACpDT,OAAOuF,KAAKD,GAAeE,QAAQ,SAAUX,GAC3CQ,EAAKJ,OAAOJ,IAAQS,EAAcT,KAHpC,GAOJ,OAAOQ,GAGI5D,QChHAgE,0NAnDb9B,MAAQ,KAER+B,YAAc,SAAAvF,GACZL,EAAK6F,MAAMC,MAAM9F,EAAK6F,MAAME,KAAK1F,6EAGjC,IAAI2F,EAAY,CACd,OACA/F,KAAK4F,MAAME,KAAKxF,OAASoB,EAAOY,kBAAoB,QAAU,GAC9DtC,KAAK4F,MAAME,KAAK3F,OAAS,SAAW,IAGlC6F,EACFhG,KAAK4F,MAAME,KAAKxF,OAASoB,EAAOW,sBAC5B,iBACArC,KAAK4F,MAAME,KAAK3F,OAChB,QACA,aAEN,OACE8F,EAAAC,EAAAC,cAAA,OACEC,QACEpG,KAAK4F,MAAMS,aACP,KACArG,KAAK2F,YAAYzB,KAAKlE,KAAMA,KAAK4F,MAAME,KAAK1F,IAElDkG,UAAWP,EAAUQ,KAAK,MAE1BN,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OACEK,IAAKxG,KAAK4F,MAAME,KAAKtF,MACrBiG,IAAI,MAGRR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,QAAQtG,KAAK4F,MAAME,KAAKvF,OAEvC0F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,SACAL,EAAAC,EAAAC,cAAA,SAAInG,KAAK4F,MAAME,KAAK/E,SAApB,WAEFkF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAkBN,aA5CxBU,cCwFJC,oNAnBbC,UAAY,SAACxG,EAAIyG,GACf,IAAIC,EAAQ,KACZ,GAAoB,OAAhB1G,EAAGK,SACL,IAAK,IAAIgE,EAAI,EAAGA,EAAIoC,EAAEjG,OAAQ6D,IAAK,CACjC,IAAK,IAAI5D,EAAI,EAAGA,EAAIgG,EAAEpC,GAAG/D,SAASE,OAAQC,IACxC,GAAIT,IAAOyG,EAAEpC,GAAG/D,SAASG,GAAGT,GAC1B,OAAOyG,EAAEpC,GAGb,GAAkB,SAAdoC,EAAEpC,GAAGnE,MAEO,QADdwG,EAAQ/G,EAAK6G,UAAUxG,EAAIyG,EAAEpC,GAAG/D,WACZ,MAI1B,OAAOoG,2EAlFA,IAAAC,EAAA/G,KACHgH,EAAc,GACdC,EAAcjH,KAAK4F,MAAMzF,OAEzB+G,EAAyB,GAE7B,GAAoB,OAAhBD,QAAwCpC,IAAhBoC,EAA2B,CAKrD,IAHiCC,EAAR,SAArBD,EAAY3G,KAA0C2G,EAAYvG,SACxCV,KAAK4G,UAAUK,EAAY7G,GAAIJ,KAAK4F,MAAMlF,UAAUA,SAElD,OAAzBuG,EAAYxG,WACjBuG,EAAYlG,KAAKmG,GAEG,QADpBA,EAAcjH,KAAK4G,UAAUK,EAAY7G,GAAIJ,KAAK4F,MAAMlF,cAIvDuG,GAAaD,EAAYlG,KAAKmG,QAET,MAAfA,IACTC,EAAyBlH,KAAK4F,MAAMlF,UAItC,OACEuF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,KACEC,QAAS,WACPW,EAAKnB,MAAMD,YAAY,QAGxB,IALH,YAMY,KAEXqB,EAAYG,UAAUC,IAAI,SAACC,EAASvC,GACnC,OACEmB,EAAAC,EAAAC,cAAA,OACErB,IAAKA,EACLsB,QAAS,WACPW,EAAKnB,MAAMD,YAAY0B,EAAQjH,MAGjC6F,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,eACAL,EAAAC,EAAAC,cAAA,SAAIkB,EAAQ9G,UAMpB0F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACV5E,EAAOkD,QAAQsC,GAUZjB,EAAAC,EAAAC,cAAA,OAAKG,UAAW,cAAcL,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,sBATxCe,EAAuBE,IAAI,SAAAC,GACzB,OACEpB,EAAAC,EAAAC,cAACmB,EAAD,CACEzB,MAAOkB,EAAKnB,MAAMD,YAClBb,IAAKuC,EAAQjH,GACb0F,KAAMuB,eA1DPX,cCWJa,QAbIC,IAAMC,cAAc,CAInC9D,QAAU,GACVK,4BAA8B,SAAC0D,KAC/B7D,+BAAiC,SAAC6D,KAClCzD,iBAAmB,aACnBE,aAAe,SAACuD,KAChBrD,YAAc,SAACqD,KACfpD,mBAAqB,SAAC3D,QCNpBgH,mLAKO,IAAA5H,EAAAC,KACH2D,EAAU,CACViE,SAAU,eACVC,MAAO,UAAWnG,EAAOkD,QAAQ5E,KAAK8H,QAAQnE,QAAQkE,OAAS,IAAO7H,KAAK8H,QAAQnE,QAAQkE,OAC3FE,MAAO,YAAarG,EAAOkD,QAAQ5E,KAAK8H,QAAQnE,QAAQpD,MAAQ,IAAOP,KAAK8H,QAAQnE,QAAQpD,OAElG,OACE0F,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,WAAKrG,EAAK6F,MAAMoC,wBAAyB1B,UAAU,eAClEL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,UAEFL,EAAAC,EAAAC,cAAA,SACGxC,EAAQiE,SADX,MACwBjE,EAAQkE,MADhC,KACyC,IACtClE,EAAQoE,eAlBSrB,aAyB5BiB,EAAcM,YAAcV,EACbI,QCCAO,6MA5BbtE,MAAQ,CACNyD,QAAStH,EAAK6F,MAAMyB,QACpBc,QAAS,CAAC,UAAW,UAAW,oFAOzB,IAAApB,EAAA/G,KACP,OACEiG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACXL,EAAAC,EAAAC,cAACmB,EAAD,CAAMxB,KAAM9F,KAAK4F,MAAMyB,QAAShB,cAAc,IAChDJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAY4B,EAAgBE,mBAC1CnC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAeF,QAAS,kBAAMW,EAAKnB,MAAMyC,yBACtDpC,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,SACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,0EAdV,MAAO,gJAPmBO,8BC4Df4B,aAtBb,SAAAA,EAAYxI,GAASG,OAAAC,EAAA,EAAAD,CAAAD,KAAAsI,GACJ,OAAXxI,IACJE,KAAKI,GAAKN,EAAOO,eAAe,MAAQP,EAAM,GAAS,KACvDE,KAAKM,KAAOR,EAAOO,eAAe,QAAUP,EAAM,KAAW,KAC7DE,KAAKuI,UAAYzI,EAAOO,eAAe,aACnCP,EAAM,UACN,KACJE,KAAKwI,QAAU1I,EAAOO,eAAe,WAAaP,EAAM,QAAc,KACtEE,KAAKyI,OAAS3I,EAAOO,eAAe,aAAeP,EAAM,UAAgB,uDA9CzE,OAAOE,KAAKqB,oBAGLH,GACPlB,KAAKqB,MAAQH,kCAIb,OAAOlB,KAAK0I,uBAGFxH,GACVlB,KAAK0I,SAAWxH,6BAIhB,OAAOlB,KAAKwB,kBAGPN,GACLlB,KAAKwB,IAAMN,oCAIX,OAAOlB,KAAK2I,yBAGAzH,GACZlB,KAAK2I,WAAazH,iCAIlB,OAAOlB,KAAK4I,sBAGH1H,GACTlB,KAAK4I,QAAU1H,0DAcA2H,GACf,IACE,OAAQC,IAAOD,EAAKC,IAAOC,UAAUC,OAAO,2BAC7C,MAAOnH,GACNC,QAAQC,MAAMF,GAEhB,MAAO,aCwEIoH,6MA7HbrF,MAAQ,CACNsF,2BAA4B,EAC5BlI,cAAe,CACb,CACEmI,SAAU,mBACVC,UAAW,UACXC,QACE,2FACF/I,KAAM,UAER,CACE6I,SAAU,cACVC,UAAW,UACXC,QACE,uFACF/I,KAAM,aAER,CACE6I,SAAU,kBACVC,UAAW,UACXC,QACE,uFACF/I,KAAM,iBAQZgJ,gBAAkB,SAAAlJ,GAChB,OAAQsB,EAAOkD,QAAQ7E,EAAK6F,MAAM2D,YAC/BxJ,EAAK6F,MAAM2D,UAAUlJ,eAAeD,GAAML,EAAK6F,MAAM2D,UAAUnJ,GAAIG,KAAO,QAI/EiJ,+BAAiC,WAE/B,IADA,IAAIxI,EAAgB,GACXH,EAAI,EAAGA,EAAId,EAAK6F,MAAM5E,cAAcJ,OAAQC,IACV,oBAArCd,EAAK6F,MAAM5E,cAAcH,GAAGP,MAC9BU,EAAcF,KAAKf,EAAK6F,MAAM5E,cAAcH,IAChD,OAAOG,KAGTyI,UAAY,SAAAC,GACV,OAAQpB,EAAcqB,UAAUD,EAAY,cAK9CE,sBAAwB,SAACC,EAAQ7I,GAC/B,IAAIL,EAAO,GACPkJ,EAAS7I,EAAcJ,SAAQiJ,EAAS7I,EAAcJ,QACtDiJ,EAAS,IAAGA,EAAS,GACzB,IAAK,IAAIhJ,EAAI,EAAGA,EAAIgJ,EAAQhJ,IAAKF,EAAKG,KAAKE,EAAcH,IACzD,OAAOF,2EAEA,IAAAoG,EAAA/G,KACHa,EAAI,EACR,OACEoF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,YAEFL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAY,gKACzBL,EAAAC,EAAAC,cAAA,UACEG,UAAU,cACVF,QAAS,kBAAMW,EAAKnB,MAAMkE,kBAE1B7D,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,UACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,6DAIJF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAY,+GACzBL,EAAAC,EAAAC,cAAA,UACEG,UAAU,cACVF,QAAS,kBAAMW,EAAKnB,MAAMmE,mBAE1B9D,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,OACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAEfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPW,EAAKnB,MAAMoE,yBAFf,aASDhK,KAAK4F,MAAM5E,cAAciJ,MAAM,EAAE,GAAG7C,IAAI,SAAAsC,GAAY,OACnDzD,EAAAC,EAAAC,cAAA,OAAKrB,MAAOjE,EAAGyF,UAAU,qBACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,SAAIY,EAAKuC,gBAAgBI,EAAaQ,YACtCjE,EAAAC,EAAAC,cAAA,KAAGG,UAAU,QACVS,EAAK0C,UAAUC,GAAcS,aAGlClE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACbL,EAAAC,EAAAC,cAAA,UACyB,oBAAtBuD,EAAapJ,KACV,oBACA,KACHoJ,EAAalB,sBAnHH9B,aCHvB0D,6MACJxG,MAAQ,CACNyD,QAAStH,EAAK6F,MAAMyB,WAGtBgD,qBAAuB,WACrB,OAAgD,IAA5CtK,EAAK6F,MAAMyB,QAAQrG,cAAcJ,OAC5BqF,EAAAC,EAAAC,cAAA,6BAEFpG,EAAK6F,MAAMyB,QAAQrG,cAAcoG,IAAI,SAACsC,EAAc5E,GACzD,OACEmB,EAAAC,EAAAC,cAAA,OAAKrB,IAAKA,EAAKwB,UAAW,gBAAkBoD,EAAapJ,MACvD2F,EAAAC,EAAAC,cAAA,SACyB,oBAAtBuD,EAAapJ,KACZ2F,EAAAC,EAAAC,cAAA,qCAEA,GACC,IACFuD,EAAalB,qFAOf,IAAAzB,EAAA/G,KACP,OACEiG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACbL,EAAAC,EAAAC,cAAA,OACEK,IAAKxG,KAAK4F,MAAMyB,QAAQ7G,MACxBiG,IAAI,KAENR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,IAAiCtG,KAAKqK,wBACtCpE,EAAAC,EAAAC,cAAA,UAAKnG,KAAK4F,MAAMyB,QAAQ9G,OAE1B0F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OACEG,UAAU,cACVF,QAAS,WACPW,EAAKe,QAAQxD,mBAAmB,CAACgG,OAASvD,EAAKnB,MAAMyB,QAAQjH,GAAIW,SAAU,IAC3EgG,EAAKnB,MAAM2E,yBAGbtE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,uCAGJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAaF,QAAS,kBAAMW,EAAKnB,MAAM4E,eACpDvE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yCAGJF,EAAAC,EAAAC,cAAA,OACEG,UAAU,iBACVF,QAAS,kBAAMW,EAAKnB,MAAMyC,yBAE1BpC,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,SACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,+BA5DYO,aAoE1B0D,EAAYnC,YAAcV,EACX6C,QCfAK,6MAjDb7G,MAAQ,CACNyD,QAAStH,EAAK6F,MAAMyB,QACpBc,QAAS,CAAC,UAAW,UAAW,8FAGf,IAAApB,EAAA/G,KACjB,OAA8B,OAAvBA,KAAK4F,MAAMyB,QAChBpB,EAAAC,EAAAC,cAACuE,EAAD,CACEnB,UAAavJ,KAAK4F,MAAM2D,UACxBO,cAAe9J,KAAK4F,MAAMkE,cAC1BC,eAAgB/J,KAAK4F,MAAMmE,eAC3B/I,cAAehB,KAAK4F,MAAM5E,cAC1BwD,MAAOxE,KAAK4F,MAAMpB,MAClBwF,qBAAsBhK,KAAK4F,MAAMoE,uBAEL,SAA5BhK,KAAK4F,MAAMyB,QAAQ/G,KACrB2F,EAAAC,EAAAC,cAACwE,EAAD,CACEpB,UAAavJ,KAAK4F,MAAM2D,UACxBlC,QAASrH,KAAK4F,MAAMyB,QACpBgB,qBAAsB,WACpBtB,EAAKnB,MAAMyC,uBACXtB,EAAKnB,MAAMoC,qBAAqB,UAElCuC,qBAAsBvK,KAAK4F,MAAM2E,qBACjCC,WAAYxK,KAAK4F,MAAM4E,aAGzBvE,EAAAC,EAAAC,cAACyE,EAAD,CACErB,UAAavJ,KAAK4F,MAAM2D,UACxBlC,QAASrH,KAAK4F,MAAMyB,QACpBgB,qBAAsB,WACpBtB,EAAKnB,MAAMyC,uBACXtB,EAAKnB,MAAMoC,qBAAqB,6CAMtC,OACE/B,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,WACN5E,EAAAC,EAAAC,cAAC2E,EAAD,CACE9C,qBAAsBhI,KAAK4F,MAAMoC,uBAElChI,KAAK+K,2BA5CQrE,sCC6KPsE,cA/Kb,SAAAA,EAAYpF,GAAO,IAAA7F,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgL,IACjBjL,EAAAE,OAAAgL,EAAA,EAAAhL,CAAAD,KAAAC,OAAAiL,EAAA,EAAAjL,CAAA+K,GAAAG,KAAAnL,KAAM4F,KAkCRwF,cAAgB,SAAAhL,GACdL,EAAK6F,MAAMwF,cACTrL,EAAK6G,UAAU7G,EAAK6F,MAAMyB,QAAQjH,GAAIL,EAAK6F,MAAMlF,YArClCX,EAyCnBsL,cAAgB,SAAAjL,GACdL,EAAK6F,MAAMyF,cAAcjL,EAAGA,KA1CXL,EAkJnBuL,WAAa,WACXvL,EAAK+D,SAAS,CAAEyH,WAAY,MAnJXxL,EAsJnByL,aAAe,SAAAjL,GAEb,OAA2D,KAD3DA,EAAOA,EAAKkL,eACHC,QAAQ3L,EAAK6D,MAAM2H,WAAWE,gBAxJtB1L,EA4JnB6G,UAAY,SAACxG,EAAIyG,GACf,IAAIC,EAAQ,KACZ,GAAoB,OAAhB1G,EAAGK,SACL,IAAK,IAAIgE,EAAI,EAAGA,EAAIoC,EAAEjG,OAAQ6D,IAAK,CACjC,IAAK,IAAI5D,EAAI,EAAGA,EAAIgG,EAAEpC,GAAG/D,SAASE,OAAQC,IACxC,GAAIT,IAAOyG,EAAEpC,GAAG/D,SAASG,GAAGT,GAC1B,OAAOyG,EAAEpC,GAGb,GAAkB,SAAdoC,EAAEpC,GAAGnE,MAEO,QADdwG,EAAQ/G,EAAK6G,UAAUxG,EAAIyG,EAAEpC,GAAG/D,WACZ,MAI1B,OAAOoG,GAzKP/G,EAAK4L,QAAU,EACf5L,EAAK6L,cAAgB7L,EAAK6L,cAAc1H,KAAnBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KACrBA,EAAK+L,mBAAqB/L,EAAK+L,mBAAmB5H,KAAxBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KAC1BA,EAAK6D,MAAQ,CACX2H,WAAY,IANGxL,mFAWjBgM,SAASC,iBAAiB,YAAahM,KAAK8L,oBAC5CC,SAASC,iBAAiB,aAAchM,KAAK8L,mEAI7CC,SAASE,oBAAoB,YAAajM,KAAK8L,oBAC/CC,SAASE,oBAAoB,aAAcjM,KAAK8L,0DAGpCI,GACZlM,KAAKmM,WAAaD,6CAKDE,GACbpM,KAAKmM,aAAenM,KAAKmM,WAAWE,SAASD,EAAME,SAErDtM,KAAK4F,MAAM2G,yDAgBEC,GAEfxM,KAAK8D,SAAS,CACZyH,WAAYiB,EAAIF,OAAOpL,yCAIlB,IAAA6F,EAAA/G,KACHyM,EAAQ,CAAEC,MAAO,SAErB,OACEzG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,OAAKM,IAAI,OAAOD,IAAKmG,OAGvB1G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACW,OAAvBtG,KAAK4F,MAAMyB,QACVpB,EAAAC,EAAAC,cAAA,UACEG,UAAU,gBACVF,QAAS,WACPW,EAAKqE,cACHrE,EAAKH,UAAUG,EAAKnB,MAAMyB,QAAQjH,GAAI2G,EAAKnB,MAAMlF,aAIrDuF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,gBAEA,KACJL,EAAAC,EAAAC,cAAA,UACEG,UAAU,uBACVF,QAAS,kBAAMW,EAAKnB,MAAMgH,8BAE1B3G,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,mBAEFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,SACE0G,YAAY,6BACZzG,QAAS,kBAAMW,EAAKnB,MAAMkH,iBAC1B5L,MAAOlB,KAAK4D,MAAM2H,WAClBwB,SAAU,SAAAP,GAAG,OAAIzF,EAAKiG,iBAAiBR,MAEzCvG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,8BAAb,UACCtG,KAAK4F,MAAMqH,YACVhH,EAAAC,EAAAC,cAAA,MAAAlG,OAAAiN,OAAA,CACErC,GAAG,eACE7K,KAAK4F,MAAMyB,QAAWoF,EAAQ,CAAEA,SAAW,KAFlD,CAGEU,IAAKnN,KAAK4L,gBAET5L,KAAKoN,eAAepN,KAAK4F,MAAMlF,SAAU,IAE1C,MAENuF,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPW,EAAKnB,MAAMoC,wBAEb1B,UAAU,eAEVL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,kDAOKe,EAASgG,GAAM,IAAAC,EAAAtN,KACxBI,EAAK,EACT,OAAa,IAATiN,EAAmBhG,EAAQD,IAAI,SAAAC,GAAO,OAAIiG,EAAKF,eAAe/F,EAAS,KAGlEA,EAAQ3G,SAAS0G,IAAI,SAAAC,GAAO,MAChB,SAAjBA,EAAQ/G,KACNgN,EAAK9B,aAAanE,EAAQ9G,OACxBH,EAAK,EACH6F,EAAAC,EAAAC,cAAA,OACErB,MAAO1E,EACPkG,UAAU,aACVF,QAAS,WACPkH,EAAKjC,cAAchE,GACnBiG,EAAK1H,MAAM2G,kBAGbtG,EAAAC,EAAAC,cAAA,OACEM,IAAI,OACJD,IAAKa,EAAQ7G,QAEfyF,EAAAC,EAAAC,cAAA,SAAI,IAAMkB,EAAQ9G,MAClB0F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,gBAIJ,KAEJgH,EAAKF,eAAe/F,EAAS,YA7IlBX,aCEf6G,qBACJ,SAAAA,EAAY3H,GAAO,IAAA7F,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuN,IACjBxN,EAAAE,OAAAgL,EAAA,EAAAhL,CAAAD,KAAAC,OAAAiL,EAAA,EAAAjL,CAAAsN,GAAApC,KAAAnL,KAAM4F,KACDgG,cAAgB7L,EAAK6L,cAAc1H,KAAnBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KAErBA,EAAKyN,aAAehG,IAAMiG,YAC1B1N,EAAK2N,oBAAsBlG,IAAMiG,YACjC1N,EAAK4N,cAAgBnG,IAAMiG,YAE3B1N,EAAK6N,cAAgBpG,IAAMiG,YAI3B1N,EAAK+L,mBAAqB/L,EAAK+L,mBAAmB5H,KAAxBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KAZTA,mFAgBjBgM,SAASC,iBAAiB,YAAahM,KAAK8L,oBAC5CC,SAASC,iBAAiB,aAAchM,KAAK8L,mEAI7CC,SAASE,oBAAoB,YAAajM,KAAK8L,oBAC/CC,SAASE,oBAAoB,aAAcjM,KAAK8L,0DAGpCI,GACZlM,KAAKmM,WAAaD,6CAKDE,GACbpM,KAAKmM,aAAenM,KAAKmM,WAAWE,SAASD,EAAME,UACrDxK,QAAQwB,IAAI,8BACZtD,KAAK4F,MAAMiI,mDAIJ,IAAA9G,EAAA/G,KACL8N,EAAO9N,KAGPO,EAAOP,KAAKwN,aAAaO,QAAQ7M,MACjC8M,EAAchO,KAAK0N,oBAAoBK,QAAQ7M,MAC/C+M,EAAQjO,KAAK2N,cAAcI,QAAQ7M,MAEnCmM,GAAO,EAWX,GATG3L,EAAOkD,QAAQrE,IAAYP,KAAKwN,aAAaO,QAAQhI,UAAUsG,SAAS,SAAUrM,KAAKwN,aAAaO,QAAQhI,UAAUmI,IAAI,QAAQb,GAAO,GACpIrN,KAAKwN,aAAaO,QAAQhI,UAAUsG,SAAS,SAASrM,KAAKwN,aAAaO,QAAQhI,UAAUoI,OAAO,QAGtGzM,EAAOkD,QAAQoJ,IAAkBhO,KAAK0N,oBAAoBK,QAAQhI,UAAUsG,SAAS,SAASrM,KAAK0N,oBAAoBK,QAAQhI,UAAUmI,IAAI,QAAQb,GAAO,GACvJrN,KAAK0N,oBAAoBK,QAAQhI,UAAUsG,SAAS,SAASrM,KAAK0N,oBAAoBK,QAAQhI,UAAUoI,OAAO,QAEvHF,EAAQvM,EAAOkD,QAAQqJ,GAAS,IAAMA,GAE1B,IAATZ,EAUH,OAPArN,KAAK8H,QAAQ3D,eACTnE,KAAK4N,cAAcG,QAAQhI,UAAUsG,SAAS,YAAYrM,KAAK4N,cAAcG,QAAQhI,UAAUmI,IAAI,WAMhG,IAAIrL,QAAQ,SAACC,EAASC,GAC3BC,IAAMoL,KAAK1M,EAAOgB,iBAAiB,CACjC2L,UAAWP,EAAKhG,QAAQnE,QAAQkH,GAChCtK,KAAOA,EACPyN,YAAcA,EACdC,MAAQA,IAEL/K,KAAK,SAACC,GACL,IACErB,QAAQwB,IAAIH,GACZ,IAAIC,EAASD,EAAQ,OACjBE,SAASD,KAAY1B,EAAOM,wBAA0BqB,SAASD,KAAY1B,EAAOO,6BAClFH,QAAQwB,IAAI,wCACZwK,EAAKhG,QAAQzD,cACV0C,EAAK6G,cAAcG,QAAQhI,UAAUsG,SAAS,YAAYtF,EAAK6G,cAAcG,QAAQhI,UAAUoI,OAAQ,WAC1GpH,EAAKnB,MAAM0I,YAEVxM,QAAQwB,IAAI,uCAClB,MAAOzB,GACNC,QAAQC,MAAM,2BACdD,QAAQC,MAAMF,GACdkB,OAGHQ,MAAM,SAACxB,GACND,QAAQC,MAAM,qCACdD,QAAQC,MAAMA,EAAMoB,UACpB2K,EAAKhG,QAAQzD,cACV0C,EAAK6G,cAAcG,QAAQhI,UAAUsG,SAAS,YAAYtF,EAAK6G,cAAcG,QAAQhI,UAAUoI,OAAQ,WAC1GpL,yCAKD,IAAAuK,EAAAtN,KACP,OACEiG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAe6G,IAAKnN,KAAK4N,eACtC3H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAO6G,IAAKnN,KAAK4L,eAC9B3F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACjBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBF,QAAS,kBAAMkH,EAAK1H,MAAMiI,gBAAzD,wBAKF5H,EAAAC,EAAAC,cAAA,oHAIAF,EAAAC,EAAAC,cAAA,8FAIEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAEbL,EAAAC,EAAAC,cAAA,SAAOoI,QAAQ,gBAAf,yBACAtI,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,eAAgBsC,IAAKnN,KAAKwN,aAAclN,KAAK,OAAOuM,YAAY,kCAG5E5G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,SAAOoI,QAAQ,uBAAf,sDACAtI,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,sBAAsBsC,IAAKnN,KAAK0N,oBAAqBpN,KAAK,OAAOuM,YAAY,wDAGzF5G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,SAAOoI,QAAQ,iBAAf,4BACAtI,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,gBAAgBsC,IAAKnN,KAAK2N,cAAerN,KAAK,OAAOuM,YAAY,2DAGjF5G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBF,QAAS,kBAAMkH,EAAK1H,MAAMiI,gBACvD5H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,6BAGJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBF,QAAS,WAAOkH,EAAKkB,cAClDvI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,0CApJeO,cA+J/B6G,EAAiBtF,YAAcV,EAChBgG,QCnKTkB,qMAEgB,IAAA1O,EAAAC,KAClBA,KAAK8H,QAAQjE,gCAA+B,GAC5C6K,WAAW,WACT3O,EAAK+H,QAAQ7D,mBACblE,EAAK6F,MAAMiI,aAAY,GACvB9N,EAAK6F,MAAM+I,uBACV,sCAIH,OACE1I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACjBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,SACAL,EAAAC,EAAAC,cAAA,uCAEFF,EAAAC,EAAAC,cAAA,6GAGAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,6BAIAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAASL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBA7BTI,cAuC1C+H,EAA4BxG,YAAcV,EAC3BkH,QC6FAG,qBApIb,SAAAA,EAAYhJ,GAAO,IAAA7F,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA4O,IACjB7O,EAAAE,OAAAgL,EAAA,EAAAhL,CAAAD,KAAAC,OAAAiL,EAAA,EAAAjL,CAAA2O,GAAAzD,KAAAnL,KAAM4F,KAKRhC,MAAQ,CACNiL,MAAO,GACPC,OAAQ,GARS/O,EAiCnBgP,UAAY,WACVhP,EAAK+D,SAAS,CACZ+K,MAAO9O,EAAK6D,MAAMiL,MAAM5E,MAAM,GAAI,KAEpClK,EAAKiP,eArCYjP,EAuCnBkP,MAAQ,WACNlP,EAAK+D,SAAS,CACZ+K,MAAO,KAET9O,EAAKiP,eA3CYjP,EA8CnBqG,QAAU,SAAA8I,GACRnP,EAAK+D,SAAS,CACZ+K,MAAO9O,EAAK6D,MAAMiL,MAAQK,IAE5BnP,EAAKiP,eAlDYjP,EAqDnBiP,YAAc,WACZjP,EAAK+D,SAAS,SAACF,EAAMgC,GAAP,MAAkB,CAC9BkJ,MAAyB,OAAhBlL,EAAMiL,OAAkC,KAAhBjL,EAAMiL,UArDzC9O,EAAK6L,cAAgB7L,EAAK6L,cAAc1H,KAAnBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KACrBA,EAAK+L,mBAAqB/L,EAAK+L,mBAAmB5H,KAAxBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KAHTA,mFAYjBgM,SAASC,iBAAiB,YAAahM,KAAK8L,oBAC5CC,SAASC,iBAAiB,aAAchM,KAAK8L,mEAI7CC,SAASE,oBAAoB,YAAajM,KAAK8L,oBAC/CC,SAASE,oBAAoB,aAAcjM,KAAK8L,0DAGpCI,GACZlM,KAAKmM,WAAaD,6CAKDE,GACbpM,KAAKmM,aAAenM,KAAKmM,WAAWE,SAASD,EAAME,SACrDtM,KAAK4F,MAAMiI,mDA8BH,IAAA9G,EAAA/G,KACNwF,EAAO,GAaX,OAZAA,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAKd,KAAKmP,UAAU,IACzB3J,EAAK1E,KAAMmF,EAAAC,EAAAC,cAAA,OAAKrB,IAAI,YAAYwB,UAAU,OAAOL,EAAAC,EAAAC,cAAA,KAAGC,QAAS,kBAAMW,EAAKgI,aAAazI,UAAU,kBAA9C,eACjDd,EAAK1E,KAAMmF,EAAAC,EAAAC,cAAA,OAAKrB,IAAI,QAAQwB,UAAU,OAAML,EAAAC,EAAAC,cAAA,QAAMC,QAAS,kBAAMW,EAAKkI,UAA1B,OACrCzJ,oCAGC4J,GAAM,IAAA9B,EAAAtN,KACf,OAAOiG,EAAAC,EAAAC,cAAA,OAAKrB,IAAKsK,GAAV,IAAmBnJ,EAAAC,EAAAC,cAAA,QAAMC,QAAU,kBAAMkH,EAAKlH,QAAQgJ,KAASA,GAA/D,sCAGC,IAAAC,EAAArP,KACP,OACEiG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAO6G,IAAKnN,KAAK4L,eAC9B3F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,OACEG,UAAU,gBACVF,QAAS,kBAAMiJ,EAAKzJ,MAAMiI,gBAF5B,WAQF5H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,SAAInG,KAAK4D,MAAMiL,QAGjB5I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZtG,KAAKsP,cAKRrJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,OACEG,UAAU,gBAAgBiJ,cAAavP,KAAK4D,MAAMkL,MAClD1I,QAAS,WAAOiJ,EAAKzJ,MAAM4J,UAAUH,EAAKzL,MAAMiL,SAEhD5I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,OACEG,UAAU,gBACVF,QAAS,kBAAMiJ,EAAKzJ,MAAMiI,gBAE1B5H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,iCA1HOO,cCgHZ+I,qBA3Gb,SAAAA,EAAY7J,GAAO,IAAA7F,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAyP,IACjB1P,EAAAE,OAAAgL,EAAA,EAAAhL,CAAAD,KAAAC,OAAAiL,EAAA,EAAAjL,CAAAwP,GAAAtE,KAAAnL,KAAM4F,KA2BR0D,gBAAkB,SAAAlJ,GAChB,OAAQsB,EAAOkD,QAAQ7E,EAAK6F,MAAM2D,YAC3BxJ,EAAK6F,MAAM2D,UAAUlJ,eAAeD,GAAML,EAAK6F,MAAM2D,UAAUnJ,GAAIG,KAAO,MA9BhER,EAkCnB0J,UAAY,SAAAC,GACV,OAAQpB,EAAcqB,UAAUD,EAAY,YAnC3B3J,EAuCnB2P,kBAAoB,SAAA1O,GAClB,IAAI2O,GAAK,EACT,EAAG,CACDA,GAAK,EACL,IAAK,IAAI9O,EAAI,EAAGA,EAAIG,EAAcJ,OAAS,EAAGC,IAC5C,GACEd,EAAK0J,UAAUzI,EAAcH,IAC7Bd,EAAK0J,UAAUzI,EAAcH,EAAI,IACjC,CACA8O,GAAK,EACL,IAAIC,EAAM5O,EAAcH,GACxBG,EAAcH,GAAKG,EAAcH,EAAI,GACrCG,EAAcH,EAAI,GAAK+O,UAGnBD,GACV,OAAO3O,GArDPjB,EAAK6L,cAAgB7L,EAAK6L,cAAc1H,KAAnBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KACrBA,EAAK+L,mBAAqB/L,EAAK+L,mBAAmB5H,KAAxBjE,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KAHTA,mFAOjBgM,SAASC,iBAAiB,YAAahM,KAAK8L,oBAC5CC,SAASC,iBAAiB,aAAchM,KAAK8L,mEAI7CC,SAASE,oBAAoB,YAAajM,KAAK8L,oBAC/CC,SAASE,oBAAoB,aAAcjM,KAAK8L,0DAGpCI,GACZlM,KAAKmM,WAAaD,6CAKDE,GACbpM,KAAKmM,aAAenM,KAAKmM,WAAWE,SAASD,EAAME,SACrDtM,KAAK4F,MAAMiI,+CAkCN,IAAA9G,EAAA/G,KACHa,EAAI,EACR,OACEoF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAO6G,IAAKnN,KAAK4L,eAC9B3F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OACEG,UAAU,gBACVF,QAAS,WACPW,EAAKnB,MAAMiI,gBAHf,WASF5H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACZtG,KAAK0P,kBAAkB1P,KAAK4F,MAAM5E,eAAeoG,IAChD,SAAAsC,GAAY,OACVzD,EAAAC,EAAAC,cAAA,OAAKrB,MAAOjE,EAAGyF,UAAU,qBACvBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,SAAIY,EAAKuC,gBAAgBI,EAAaQ,YACtCjE,EAAAC,EAAAC,cAAA,KAAGG,UAAU,QACVS,EAAK0C,UAAUC,GAAcS,aAGlClE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACbL,EAAAC,EAAAC,cAAA,UACyB,oBAAtBuD,EAAapJ,KACV,oBACA,KAAM,IACToJ,EAAalB,UAGlBvC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BA/FDI,cC2ZrBmJ,cAnZb,SAAAA,EAAYjK,GAAO,IAAA7F,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA6P,IACjB9P,EAAAE,OAAAgL,EAAA,EAAAhL,CAAAD,KAAAC,OAAAiL,EAAA,EAAAjL,CAAA4P,GAAA1E,KAAAnL,KAAM4F,KA6CRkK,mBAAqB,WACnB/P,EAAK+D,SAAS,CAAEiM,kBAAmBhQ,EAAK6D,MAAMmM,oBA/C7BhQ,EAkDnBiQ,mBAAqB,WACnBjQ,EAAK+D,SAAS,CAAEmM,kBAAmBlQ,EAAK6D,MAAMqM,oBAnD7BlQ,EAsDnBmQ,8BAAgC,WAAkB,IAAjBC,EAAiBC,UAAAxP,OAAA,QAAAiE,IAAAuL,UAAA,GAAAA,UAAA,GAAT,KACvCrQ,EAAK+D,SAAS,CACZuM,4BAAwC,OAAVF,EAA4B,SAAVA,GAAsBpQ,EAAK6D,MAAMyM,+BAxDlEtQ,EA4DnBuQ,yBAA2B,WACzBvQ,EAAK+D,SAAS,CACZyM,wBAAyBxQ,EAAK6D,MAAM2M,0BA9DrBxQ,EA2JnBsL,cAAgB,SAAAjL,GACdL,EAAK+D,SAAS,SAACF,EAAOgC,GAAR,MAAmB,CAC/BzF,OACSJ,EAAKyQ,uBAAuBpQ,EAAIwD,EAAMlD,UAAtC,WA9JMX,EAmKnBqL,cAAgB,SAAAhL,GAEH,OAAPA,EACkB,OAAhBA,EAAGK,SAELV,EAAK+D,SAAS,SAACF,EAAOgC,GAAR,MAAmB,CAC/BzF,OACSJ,EAAKyQ,uBAAuBpQ,EAAGK,SAAUmD,EAAMlD,UAA/C,UAMXX,EAAK+D,SAAS,SAACF,EAAOgC,GAAR,MAAmB,CAC/BzF,OACSJ,EAAKyQ,uBAAuBpQ,EAAGA,GAAIwD,EAAMlD,UAAzC,UAKbX,EAAK+D,SAAS,SAACF,EAAOgC,GAAR,MAAmB,CAC/BzF,OACSJ,EAAKyQ,uBAAuBpQ,EAAIwD,EAAMlD,UAAtC,WAzLIX,EA+LnByQ,uBAAyB,SAACpQ,EAAIyG,GAC5B,IAAIC,EAAQ,KACZ,GAAU,OAAND,EACF,IAAK,IAAIhG,EAAI,EAAGA,EAAIgG,EAAEjG,OAAQC,IAAK,CAEjC,GADAgG,EAAEhG,GAAGV,QAAS,EACV+E,OAAO2B,EAAEhG,GAAGT,MAAQ8E,OAAO9E,GAE7B,OADAyG,EAAEhG,GAAGV,OAAS0G,EAAEhG,GAAGP,OAASoB,EAAOY,kBAC5B,CACLnC,OAAQ0G,EAAEhG,GACVH,SAAUmG,GAId,GAFWA,EAAEhG,GAAGP,OAASoB,EAAOY,oBAC9BwE,EAAQ/G,EAAKyQ,uBAAuBpQ,EAAIyG,EAAEhG,GAAGH,UAArC,QACI,OAAVoG,EAAgB,MAGxB,MAAO,CACL3G,OAAQ2G,EACRpG,SAAUmG,IAjNK9G,EAqNnB4F,YAAc,SAAAvF,GACZ,IAAIM,EAAWX,EAAKyQ,uBAClB,8DACAzQ,EAAK6D,MAAMlD,UAFE,SAIXZ,EAASC,EAAKyQ,uBAAuBpQ,EAAIM,GACzCoF,EAAOhG,EAAOK,OACd2F,GAAQA,EAAKxF,OAASoB,EAAOY,mBAC/BvC,EAAKiI,qBAAqB,QAG5BjI,EAAK+D,SAAS,SAAC2M,EAAe7K,GAC5B,MAAO,CACLlF,SAAUZ,EAAOY,SACjBP,OACS2F,MApOI/F,EA0OnBsI,qBAAuB,WAGrBtI,EAAK+D,SAAS,CAAE3D,OAFD,KAES8M,aAAa,KA7OpBlN,EAgPnBwM,cAAgB,WACdxM,EAAK+D,SAAS,CAAEmJ,aAAa,KAjPZlN,EAoPnB2Q,cAAgB,WACd3Q,EAAK+D,SAAS,CACZ6M,gBAAgB,EAChB1D,aAAa,KAvPElN,EA2PnB6Q,gBAAkB,WAIhB7Q,EAAK+P,qBACL/P,EAAKmQ,iCAhQYnQ,EAmQnB8Q,gBAAkB,SAAAC,GACD,KAAXA,EAAeC,MAAM,wBAEvBhR,EAAKuE,mBAAmB,CAACgG,OAASvK,EAAK6D,MAAMzD,OAAOC,GAAIW,SAAU+P,IAClE/Q,EAAKiQ,qBACLjQ,EAAKmQ,kCAxQUnQ,EA2QnBiI,qBAAuB,WAAkB,IAAjBmI,EAAiBC,UAAAxP,OAAA,QAAAiE,IAAAuL,UAAA,GAAAA,UAAA,GAAT,KAC9BrQ,EAAK+D,SAAS,SAACF,EAAOgC,GAAR,MAAmB,CAC/B+K,eAA0B,OAAVR,EAA2B,SAAVA,GAAoBvM,EAAM+M,mBA7Q5C5Q,EAmRnBkE,iBAAoB,WAElBnC,QAAQwB,IAARrD,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,KACA,IAAI+N,EAAI7N,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,IAGR,OADA+B,QAAQwB,IAAI,wBACRwK,EAAKlK,MAAMG,uBAKR,IAAIlB,QAAS,SAACC,EAASC,GAEdrB,EAAOkB,sBAGhBM,KAAK,SAACvC,GAEL,QAA0BkE,IAAvBiJ,EAAKlK,MAAMyB,SAAgD,OAAvByI,EAAKlK,MAAMyB,SAC7C2L,KAAKC,UAAUnD,EAAKlK,MAAMyB,WAAc2L,KAAKC,UAAUtQ,GAGxD,OAFAmB,QAAQwB,IAAI,yCACZR,IAKJ,IAAIpC,EAAY,WACd,IACE,IAAIA,EAAWC,EAAI,SACnB,GAAID,EAAU,CAEZ,IADA,IAAIC,EAAO,GACFE,EAAI,EAAGA,EAAIH,EAASE,OAAQC,IACnCF,EAAKG,KAAK,IAAIjB,EAAQa,EAASG,KAEjC,OAAOF,GAET,MAAOkB,GAEP,OADAC,QAAQC,MAAMF,GACP,IAZK,GAeZ2C,EAAQ9C,EAAOgD,UAAUhE,GACzBM,EAAgBU,EAAO6C,kBAAkBC,GAEzCb,EAAU,CACZkH,GAAMnJ,EAAOkD,QAAQjE,EAAI,IAAuB,KAAbA,EAAI,GACvCJ,KAAQmB,EAAOkD,QAAQjE,EAAI,MAA2B,KAAfA,EAAI,KAC3CqN,YAAetM,EAAOkD,QAAQjE,EAAI,aAAyC,KAAtBA,EAAI,YACzDH,MAASkB,EAAOkD,QAAQjE,EAAI,OAA6B,KAAhBA,EAAI,MAC7CkH,MAASnG,EAAOkD,QAAQjE,EAAI,OAA6B,KAAhBA,EAAI,OAG/CmN,EAAKhK,SAAS,CACZuB,QAAU1E,EACV4I,UAAY7H,EAAO0D,gBAAgBZ,GACnCb,QAAUA,EACVgN,gBAAgB,EAChBjQ,SAAUA,EACV8D,MAAOA,EACPxD,cAAeA,EACfb,OAAQ,KACR8M,aAAa,EACb8C,kBAAkB,EAClBE,kBAAkB,EAClBI,6BAA6B,EAC7Ba,+BAAgC,KAChCX,wBAAwB,EACxBnM,SAAU,IAEZtB,MAEDS,MAAO,WACNuK,EAAKhK,SAAS,CAACM,SAAU,IACzBrB,SAlENjB,QAAQwB,IAAI,gCACL,IAAIT,QAAQ,SAACC,GAAWA,QA3RhB/C,EAiWnBuE,mBAAqB,SAAC3D,GAEpB,IAAImN,EAAI7N,OAAA4L,EAAA,EAAA5L,QAAA4L,EAAA,EAAA5L,CAAAF,IAYR,OATA+N,EAAKhK,SAAS,CACZM,SAAU,EACVL,wBAAyB,IAOpB,IAAIlB,QAAQ,SAACC,EAASC,GAC3BC,IAAMoL,KAAK1M,EAAOiB,sBAAsB,CACtC0L,UAAWP,EAAKlK,MAAMD,QAAQkH,GAC9BX,UAAYvJ,EAAK2J,OACjBvJ,SAAWW,EAAOkD,QAAQjE,EAAKI,UAAY,EAAIJ,EAAKI,WAEjDmC,KAAK,SAACC,GACL,IACErB,QAAQwB,IAAIH,GACZ,IAAIC,EAASD,EAAQ,OACjBE,SAASD,KAAY1B,EAAOM,wBAA0BqB,SAASD,KAAY1B,EAAOO,4BACpFH,QAAQwB,IAAI,sCAETxB,QAAQwB,IAAI,qCAClB,MAAOzB,GACNC,QAAQC,MAAM,yBACdD,QAAQC,MAAMF,GACdkB,OAGHQ,MAAM,SAACxB,GACND,QAAQC,MAAM,mCACdD,QAAQC,MAAMA,GACdgB,MAEDS,QAAQ,WACPsK,EAAKhK,SAAS,CACZM,SAAS,SAtYnBrE,EAAK6D,MAAQ,CACXyB,QAAU,KACV1B,QAAU,GACVgN,gBAAgB,EAChBjQ,SAAU,GACV8D,MAAO,GACP+E,UAAY,GACZvI,cAAe,GACfb,OAAQ,KACR8M,aAAa,EACb8C,kBAAkB,EAClBE,kBAAkB,EAClBI,6BAA6B,EAC7Ba,+BAAgC,KAChCX,wBAAwB,EACxBnM,SAAU,EACVL,wBAAyB,GApBVhE,mFAwBC,IAAAgH,EAAA/G,KAElBA,KAAK8D,SAAS,CAACM,SAAU,IACzBpE,KAAKiE,mBAAmBf,KAAK,WAC1B6D,EAAKjD,SAAS,CAACM,SAAU,MAI5B+M,YAAY,WAAOpK,EAAK9C,oBAAqB,sCA4CtC,IAAAqJ,EAAAtN,KAEP,OACIiG,EAAAC,EAAAC,cAACiL,EAAWC,SAAZ,CAAqBnQ,MAAOQ,EAAO+B,yBAAyBzD,OACxDiG,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,OACN5E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAACmL,EAAD,CACExE,cAAe9M,KAAK0Q,cACpBtF,cAAepL,KAAKoL,cACpB/D,QAASrH,KAAK4D,MAAMzD,OACpBO,SAAUV,KAAK4D,MAAMlD,SACrBuM,YAAajN,KAAK4D,MAAMqJ,YACxBV,cAAevM,KAAKuM,cACpBlB,cAAerL,KAAKqL,cACpBrD,qBAAsBhI,KAAKgI,qBAC3B4E,0BAA2B5M,KAAKsQ,2BAElCrK,EAAAC,EAAAC,cAACoL,EAAD,CACE5L,YAAa3F,KAAK2F,YAClBjF,SAAUV,KAAK4D,MAAMlD,SACrBP,OAAQH,KAAK4D,MAAMzD,UAGvB8F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAYkL,eAAcxR,KAAK4D,MAAM+M,gBAClD1K,EAAAC,EAAAC,cAACsL,EAAD,CACElI,UAAavJ,KAAK4D,MAAM2F,UACxBlC,QAASrH,KAAK4D,MAAMzD,OACpBqE,MAAOxE,KAAK4D,MAAMY,MAClBxD,cAAehB,KAAK4D,MAAM5C,cAC1BqH,qBAAsBrI,KAAKqI,qBAC3ByB,cAAe9J,KAAK0Q,cACpB3G,eAAgB/J,KAAK8P,mBACrBvF,qBAAsBvK,KAAKkQ,8BAC3BlI,qBAAsBhI,KAAKgI,qBAC3BwC,WAAYxK,KAAKgQ,mBACjBhG,qBAAsBhK,KAAKsQ,4BAG9BtQ,KAAK4D,MAAMmM,iBACV9J,EAAAC,EAAAC,cAACuL,EAAD,CACE7D,YAAa7N,KAAK8P,mBAClBxB,SAAUtO,KAAK4Q,kBAEf,KAEH5Q,KAAK4D,MAAMyM,4BACVpK,EAAAC,EAAAC,cAACwL,EAAD,CACE9D,YAAa7N,KAAKkQ,8BAClBvB,oBAAqB,WACnBrB,EAAK3H,YAAY,MACjB2H,EAAK4C,8BAA8B,YAGrC,KAEHlQ,KAAK4D,MAAMqM,iBACVhK,EAAAC,EAAAC,cAACyL,EAAD,CACE/D,YAAa7N,KAAKgQ,mBAClBR,UAAWxP,KAAK6Q,kBAEhB,KAEH7Q,KAAK4D,MAAM2M,uBACVtK,EAAAC,EAAAC,cAAC0L,EAAD,CACEhE,YAAa7N,KAAKsQ,yBAClBtP,cAAehB,KAAK4D,MAAM5C,cAC1BwD,MAAOxE,KAAK4D,MAAMY,MAClB+E,UAAWvJ,KAAK4D,MAAM2F,YAEtB,KAEJtD,EAAAC,EAAAC,cAAA,OAAKG,UAAW,cAAgBtG,KAAK4D,MAAMQ,QAAU,SAAW,KAAM6B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,mCArJzEO,aCFEoL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnM,EAAAC,EAAAC,cAACkM,EAAD,MAAStG,SAASuG,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvP,KAAK,SAAAwP,GACjCA,EAAaC","file":"static/js/main.241b0f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.90c95fcb.svg\";","\n\nclass Element {\n  get quantity() {\n    return this._quantity;\n  }\n\n  set quantity(value) {\n    this._quantity = value;\n  }\n\n  get parentID() {\n    return this._parentID;\n  }\n\n  set parentID(value) {\n    this._parentID = value;\n  }\n\n  /**\n   *\n   * @returns {Array<Element>}\n   */\n  get elements() {\n    return this._elements;\n  }\n\n  /**\n   *\n   * @param {Array<Element>} value\n   */\n  set elements(value) {\n    this._elements = value;\n  }\n  get type() {\n    return this._type;\n  }\n\n  set type(value) {\n    this._type = value;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(value) {\n    this._name = value;\n  }\n  get image() {\n    return this._image;\n  }\n\n  set image(value) {\n    this._image = value;\n  }\n\n  get ID() {\n    return this._ID;\n  }\n  set ID(ID) {\n    this._ID = ID;\n  }\n\n  get chosen() {\n    return this._chosen;\n  }\n\n  set chosen(value) {\n    this._chosen = value;\n  }\n  constructor(object) {\n    if (object === null) return;\n    this.chosen = false;\n    this.ID = object.hasOwnProperty(\"id\") ? object[\"id\"] : null;\n    this.type = object.hasOwnProperty(\"type\") ? object[\"type\"] : null;\n    this.name = object.hasOwnProperty(\"name\") ? object[\"name\"] : null;\n    this.image = object.hasOwnProperty(\"image\") ? object[\"image\"] : null;\n    this.parentID = object.hasOwnProperty(\"parentId\") ? object[\"parentID\"] : null;\n    this.elements = (() => {\n      let data = [];\n      let elements = object.hasOwnProperty(\"elements\") ? object[\"elements\"] : [];\n      if (elements && elements.length > 0)\n        for (let i = 0; i < elements.length; i++)\n          data.push(new Element(elements[i]));\n      return data;\n    })();\n\n    this.quantity = this.elements.length;\n\n    this.notifications = (() => {\n      let data = [];\n      let notifications = object.hasOwnProperty(\"messages\") ? object[\"messages\"] : [];\n      if (notifications && notifications.length > 0) for (let i = 0; i < notifications.length; i++) {\n        notifications[i][\"elementId\"] = this.ID;\n        data.push(notifications[i]);\n      }\n      return data;\n    })();\n  }\n}\n\nexport default Element;\n","import axios from \"axios\";\nimport Element from \"./model/Element\";\n\nclass Config {\n  static HTTP_REQUEST_STATUS_OK = 200;\n  static HTTP_REQUEST_STATUS_CREATED = 201;\n  static HTTP_REQUEST_STATUS_BAD_REQUEST = 400;\n  static HTTP_REQUEST_STATUS_NO_CONTENT = 204;\n  static HTTP_REQUEST_STATUS_NOT_FOUND = 404;\n\n  static ELEMENT_TYPE_CATEGORY = \"category\";\n  static ELEMENT_TYPE_ITEM = \"item\";\n\n  static STATION_ID = \"5cec1a164bda4429340dfdbe\";\n  static API_ROOT = \"https://smart-office-backend.herokuapp.com/api/\";\n  static API_GLOBAL_RETRIEVE = Config.API_ROOT + \"user/stations/\";\n  static API_REQUEST_SEND = Config.API_ROOT + \"user/requests/add\";\n  static API_NOTIFICATION_SEND = Config.API_ROOT + \"user/notifications/add\";\n\n  static loadElementsFromAPI = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(Config.API_GLOBAL_RETRIEVE + Config.STATION_ID)\n        .then(response => {\n          try {\n            let status = response[\"status\"];\n            if (parseInt(status) === Config.HTTP_REQUEST_STATUS_OK) {\n              console.log(response);\n              resolve(response[\"data\"]);\n            }\n          } catch (e) {\n            console.error(\"Parsing error at load.\");\n            console.error(e);\n            reject();\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          reject();\n        })\n        .finally(() => {\n          // always executed\n        });\n    });\n  };\n\n  static generateAppContextValues = globalScope => {\n    return {\n      station: globalScope.state.station,\n      doChangeIsSafeToUpdateUniverse: value => {\n        globalScope.setState({ isSafeToUpdateUniverse: value === true });\n      },\n      doGetIsSafeToUpdateUniverse: () => {\n        return globalScope.state.isSafeToUpdateUniverse;\n      },\n      doUpdateUniverse: globalScope.doUpdateUniverse.bind(globalScope),\n      startLoading: () => {\n        globalScope.setState({ loading: true });\n      },\n      stopLoading: () => {\n        globalScope.setState({ loading: false });\n      },\n      doNotificationSend: globalScope.doNotificationSend.bind(globalScope)\n    };\n  };\n\n  /**\n   * Parsing utils\n   */\n\n  static loadNotifications = items => {\n    let notifications = [];\n    for (let i = 0; i < items.length; i++)\n      for (let j = 0; j < items[i].notifications.length; j++) {\n        items[i].notifications[j][\"elementId\"] = items[i].ID;\n        notifications.push(items[i].notifications[j]);\n      }\n    return notifications;\n  };\n\n  static loadItems = elements => {\n    let items = [];\n    for (let i = 0; i < elements.length; i++)\n      if (elements[i].type === \"category\") {\n        let sub_elements = this.loadItems(elements[i].elements);\n        for (let j = 0; j < sub_elements.length; j++)\n          items.push(sub_elements[j]);\n      } else {\n        items.push(elements[i]);\n      }\n    return items;\n  };\n\n  static isEmpty = value => {\n    try {\n      if (value === undefined || typeof value === \"undefined\" || value === null)\n        return true; //first check if value is defined and !null\n\n      //case : object\n      if (typeof value === \"object\") {\n        for (let key in value) if (key !== undefined) return false; //check if the object has any values\n      }\n      //case : array\n      else if (value.constructor === Array) {\n        if (value.length !== 0) return false; //check if the array has positive length\n      }\n      //case : string/number\n      else {\n        if (value === \"0\" || value === 0 || value === false || value === true)\n          return false;\n        return !value || /^\\s*$/.test(String(value));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    return true;\n  };\n\n  /**\n   * Deprecated\n   */\n\n  loadElementsFromLocal = () => {\n    /**\n     * Load our array of elements from the json file\n     * Will be replaced by a request once networking is done\n     */\n    try {\n      let elements = require(\"./resources/data/elements.json\");\n      if (elements) {\n        let data = [];\n        for (let i = 0; i < elements.length; i++) {\n          data.push(new Element(elements[i]));\n        }\n        return data;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return [];\n  };\n\n  /**\n   * JS plays with references rather than copies of objects. By storing the items/elements\n   * in both a TREE and a FLAT array, we can easily\n   *  ---> update values in the FLAT array (so as not to always recursively cover the entire tree over and over again)\n   *  ---> see changes in both the FLAT array and the TREE\n   * @param initial\n   * @return {Object} a map of elements  ID => element\n   */\n  static flattenElements = initial => {\n    let flat = {};\n    for (let i = 0; i < initial.length; i++) {\n      flat[String(initial[i].ID)] = initial[i];\n      if (\n        !Config.isEmpty(initial[i].elements) &&\n        initial[i].elements.length > 0\n      ) {\n        let flat_children = this.flattenElements(initial[i].elements);\n        Object.keys(flat_children).forEach(function (key) {\n          flat[String(key)] = flat_children[key];\n        });\n      }\n    }\n    return flat;\n  };\n}\nexport default Config;\n","import React, { Component } from \"../../node_modules/react\";\nimport Config from \"../config\";\nimport \"../resources/styles/Item.scss\";\n\nclass Item extends Component {\n  state = {};\n\n  onItemClick = ID => {\n    this.props.click(this.props.item.ID);\n  };\n  render() {\n    let classList = [\n      \"Item\",\n      this.props.item.type === Config.ELEMENT_TYPE_ITEM ? \"final\" : \"\",\n      this.props.item.chosen ? \"chosen\" : \"\"\n    ];\n\n    let footerIcon =\n      this.props.item.type === Config.ELEMENT_TYPE_CATEGORY\n        ? \"drag_indicator\"\n        : this.props.item.chosen\n        ? \"close\"\n        : \"play_arrow\";\n\n    return (\n      <div\n        onClick={\n          this.props.sideBarCheck\n            ? null\n            : this.onItemClick.bind(this, this.props.item.ID)\n        }\n        className={classList.join(\" \")}\n      >\n        <div className=\"image\">\n          <img\n            src={this.props.item.image}\n            alt=\"\"\n          />\n        </div>\n        <div className=\"body\">\n          <p className=\"name\">{this.props.item.name}</p>\n        </div>\n        <div className=\"footer\">\n          <div className=\"quantity\">\n            <i className=\"material-icons\">label</i>\n            <p>{this.props.item.quantity} items</p>\n          </div>\n          <div className=\"button\">\n            <i className=\"material-icons\">{footerIcon}</i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Item;\n","import React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport \"../resources/styles/Main.scss\";\nimport Config from \"../config\";\n\nclass Main extends Component {\n  render() {\n    let breadcrumbs = [];\n    let localChosen = this.props.chosen;\n\n    let localElementsContainer = [];\n\n    if (localChosen !== null && localChosen !== undefined) {\n\n      if (localChosen.type !== \"item\") localElementsContainer = localChosen.elements;\n      else localElementsContainer = this.getParent(localChosen.ID, this.props.elements).elements;\n\n      while (localChosen.parentID !== null) {\n        breadcrumbs.push(localChosen);\n        localChosen = this.getParent(localChosen.ID, this.props.elements);\n        if (localChosen === null) break;\n      }\n\n      if(localChosen) breadcrumbs.push(localChosen);\n\n    } else if (localChosen == null) {\n      localElementsContainer = this.props.elements;\n    }\n\n\n    return (\n      <div className=\"MainContainer\">\n        <div className=\"breadcrumbs\">\n          <p\n            onClick={() => {\n              this.props.onItemClick(null);\n            }}\n          >\n            {\" \"}\n            All items{\" \"}\n          </p>\n          {breadcrumbs.reverse().map((element, key) => {\n            return (\n              <div\n                key={key}\n                onClick={() => {\n                  this.props.onItemClick(element.ID);\n                }}\n              >\n                <i className=\"material-icons\">arrow_right</i>\n                <p>{element.name}</p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"Main\">\n          { !Config.isEmpty(localElementsContainer)\n            ? localElementsContainer.map(element => {\n                return (\n                  <Item\n                    click={this.props.onItemClick}\n                    key={element.ID}\n                    item={element}\n                  />\n                );\n              })\n              : <div className={\"Item empty\"}><p>0</p><span>Items</span></div>}\n        </div>\n      </div>\n    );\n  }\n\n  getParent = (ID, V) => {\n    let found = null;\n    if (ID.parentID !== null) {\n      for (let j = 0; j < V.length; j++) {\n        for (let i = 0; i < V[j].elements.length; i++) {\n          if (ID === V[j].elements[i].ID) {\n            return V[j];\n          }\n        }\n        if (V[j].type !== \"item\") {\n          found = this.getParent(ID, V[j].elements);\n          if (found !== null) break;\n        }\n      }\n    }\n    return found;\n  };\n}\n\nexport default Main;\n","import React  from \"react\";\n\n\nconst AppContext = React.createContext({\n    /**\n     * Values declared here for variables *should* be redundant. Initialize them in the Context provider\n     */\n    station : {},\n    doGetIsSafeToUpdateUniverse : (scope) => {},\n    doChangeIsSafeToUpdateUniverse : (scope) => {},\n    doUpdateUniverse : () => {},\n    startLoading : (scope) => {},\n    stopLoading : (scope) => {},\n    doNotificationSend : (data) => {},\n\n});\nexport default AppContext;","import React, { Component } from \"react\";\n\nimport \"../resources/styles/SideBar.scss\";\nimport AppContext from \"../model/AppContext\";\nimport Config from \"../config\";\n\n\nclass SideBarHeader extends Component {\n\n\n\n\n    render() {\n      let station = {\n          building: \"Centric Iasi\",\n          floor: \"Floor \"+ (Config.isEmpty(this.context.station.floor) ? \"-\" :  this.context.station.floor),\n          table: \"Station \"+ (Config.isEmpty(this.context.station.name) ? \"-\" :  this.context.station.name),\n      };\n    return (\n      <header>\n        <button onClick={()=>{this.props.onToggleMobileDrawer()}} className=\"button menu\">\n          <i className=\"material-icons\">close</i>\n        </button>\n        <p>\n          {station.building} . {station.floor} .{\" \"}\n          {station.table}\n        </p>\n      </header>\n    );\n  }\n}\n\nSideBarHeader.contextType = AppContext;\nexport default SideBarHeader;\n","import React, { Component } from \"react\";\nimport Item from \"./Item\";\n\nimport \"../resources/styles/SideBar.scss\";\n\nclass SideBarCategory extends Component {\n  state = {\n    element: this.props.element,\n    actions: [\"Action1\", \"Action2\", \"Action3\"]\n  };\n\n  static getInstructions() {\n    return \"Click through the categories until you find the item you are looking for, or find it with the search feature on the top of the screen.\";\n\n  }\n  render() {\n    return (\n      <div className=\"sideBarCategory\">\n          <Item item={this.props.element} sideBarCheck={true} />\n        <div className=\"divider\"/>\n          <h3>How it works</h3>\n          <p className=\"subtitle\">{SideBarCategory.getInstructions()}</p>\n         <div className=\"spacer\"/>\n          <div className=\"button grey\"  onClick={() => this.props.onClickDiscardSearch()}>\n            <i className=\"material-icons\">close</i>\n            <div className=\"content\">\n              <p>Discard Search</p>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default SideBarCategory;\n","import Moment from \"moment\";\n\nclass SNotification {\n\n  get type() {\n    return this._type;\n  }\n\n  set type(value) {\n    this._type = value;\n  }\n\n  get content() {\n    return this._content;\n  }\n\n  set content(value) {\n    this._content = value;\n  }\n\n  get ID() {\n    return this._ID;\n  }\n\n  set ID(value) {\n    this._ID = value;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(value) {\n    this._createdAt = value;\n  }\n\n  get itemID() {\n    return this._itemID;\n  }\n\n  set itemID(value) {\n    this._itemID = value;\n  }\n  constructor(object) {\n    if (object === null) return;\n    this.ID = object.hasOwnProperty(\"ID\") ? object[\"ID\"] : null;\n    this.type = object.hasOwnProperty(\"type\") ? object[\"type\"] : null;\n    this.createdAt = object.hasOwnProperty(\"createdAt\")\n      ? object[\"createdAt\"]\n      : null;\n    this.content = object.hasOwnProperty(\"content\") ? object[\"content\"] : null;\n    this.itemID = object.hasOwnProperty(\"elementId\") ? object[\"elementId\"] : null;\n  }\n\n\n  static parseDate(date){\n    try{\n      return  Moment(date,Moment.ISO_8601).format('MMMM Do YYYY, h:mm:ss A');\n    }catch (e) {\n      console.error(e);\n    }\n    return \"-\";\n  }\n}\n\nexport default SNotification;\n","import React, { Component } from \"react\";\n\nimport \"../resources/styles/SideBar.scss\";\nimport Config from \"../config\";\nimport SNotification from \"../model/SNotification\";\n\n\nclass SideBarInitial extends Component {\n  state = {\n    numberOfShownNotifications: 3,\n    notifications: [\n      {\n        itemName: \"Paper Cup Medium\",\n        timeStamp: \"4:20 PM\",\n        message:\n          \"We have notified the supplier and a new batch is on its way. Thank you for your patience\",\n        type: \"normal\"\n      },\n      {\n        itemName: \"Milk 3% fat\",\n        timeStamp: \"3:45 PM\",\n        message:\n          \"We have notified the supplier. An update will be made once their answer is received.\",\n        type: \"important\"\n      },\n      {\n        itemName: \"Paper Cup Large\",\n        timeStamp: \"3:30 PM\",\n        message:\n          \"We have notified the supplier. An update will be made once their answer is received.\",\n        type: \"important\"\n      }\n    ]\n  };\n\n\n\n\n  getItemNameById = ID => {\n    return !Config.isEmpty(this.props.itemsFlat)\n    && this.props.itemsFlat.hasOwnProperty(ID) ? this.props.itemsFlat[ID].name : null;\n  };\n\n\n  getNotificationsFromManagement = () => {\n    let notifications = [];\n    for (let i = 0; i < this.props.notifications.length; i++)\n      if (this.props.notifications[i].type === \"from_management\")\n        notifications.push(this.props.notifications[i]);\n    return notifications;\n  };\n\n  printDate = notification => {\n    return (SNotification.parseDate(notification[\"createdAt\"]));\n  };\n\n\n\n  getFirstNotifications = (number, notifications) => {\n    let data = [];\n    if (number > notifications.length) number = notifications.length;\n    if (number < 0) number = 2;\n    for (let i = 0; i < number; i++) data.push(notifications[i]);\n    return data;\n  };\n  render() {\n    let i = 0;\n    return (\n      <div className=\"sideBarInitial\">\n        <div className=\"icon\">\n          <i className=\"material-icons\">explore</i>\n        </div>\n        <h3>How it works</h3>\n        <p className=\"subtitle\">{\"If your station is lacking a certain item, find it in the platform and mark it unavailable. Management will try to fix the supply issue as soon as possible.\"}</p>\n        <button\n          className=\"button grey\"\n          onClick={() => this.props.onClickSearch()}\n        >\n          <i className=\"material-icons\">search</i>\n          <div className=\"content\">\n            <p>Search and mark unavailable</p>\n            <span>or pick it from a category on the left side</span>\n          </div>\n        </button>\n\n        <p className=\"subtitle\">{\"If the item was never made available, you can request it to be included in the station stock in the future.\"}</p>\n        <button\n          className=\"button grey\"\n          onClick={() => this.props.onClickRequest()}\n        >\n          <i className=\"material-icons\">add</i>\n          <div className=\"content\">\n            <p>Request new item</p>\n          </div>\n        </button>\n        <div className=\"divider\" />\n        {/* <SideBarNotifications notifications={this.state.notifications} /> */}\n        <div className=\"notifications\">\n          <div className=\"header\">\n            <h4>Notifications</h4>\n            <button\n              onClick={() => {\n                this.props.onClickNotifications();\n              }}\n            >\n              View all\n            </button>\n          </div>\n\n          {this.props.notifications.slice(0,3).map(notification => (\n            <div key={++i} className=\"notification-item\">\n              <div className=\"header\">\n                <p>{this.getItemNameById(notification.elementId)}</p>\n                <p className=\"time\">\n                  {this.printDate(notification).toString()}\n                </p>\n              </div>\n              <div className=\"notification-item-message\">\n                <h6>\n                  {notification.type === \"from_management\"\n                    ? \"From management: \"\n                    : null}\n                  {notification.content}\n                </h6>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideBarInitial;\n","import React, { Component } from \"react\";\nimport \"../resources/styles/SideBar.scss\";\nimport AppContext from \"../model/AppContext\";\n\nclass SideBarItem extends Component {\n  state = {\n    element: this.props.element\n  };\n\n  getItemNotifications = () => {\n    if (this.props.element.notifications.length === 0)\n      return <p>No notifications</p>;\n\n    return this.props.element.notifications.map((notification, key) => {\n      return (\n        <div key={key} className={\"notification \" + notification.type}>\n          <p>\n            {notification.type === \"from_management\" ? (\n              <b>Message from management:</b>\n            ) : (\n              \"\"\n            )}{\" \"}\n            {notification.content}\n          </p>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"ItemBar sideBarItem\">\n        <img\n          src={this.props.element.image}\n          alt=\"\"\n        />\n        <div className=\"body\">\n          <div className=\"notifications\"> {this.getItemNotifications()}</div>\n          <h2>{this.props.element.name}</h2>\n        </div>\n        <div className=\"footer\">\n          <div\n            className=\"button none\"\n            onClick={() => {\n              this.context.doNotificationSend({itemId : this.props.element.ID, quantity: 0});\n              this.props.onActionConfirmation();\n            }}\n          >\n            <div className=\"content\">\n              <p>None left at the station</p>\n            </div>\n          </div>\n          <div className=\"button few\" onClick={() => this.props.onClickFew()}>\n            <div className=\"content\">\n              <p>A few left</p>\n              <span>requires quantity input</span>\n            </div>\n          </div>\n          <div\n            className=\"button discard\"\n            onClick={() => this.props.onClickDiscardSearch()}\n          >\n            <i className=\"material-icons\">close</i>\n            <div className=\"content\">\n              <p>Discard</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nSideBarItem.contextType = AppContext;\nexport default SideBarItem;\n","import React, { Component } from \"react\";\nimport SideBarHeader from \"./SideBarHeader\";\nimport SideBarCategory from \"./SideBarCategory\";\nimport SideBarInitial from \"./SideBarInitial\";\nimport SideBarItem from \"./SideBarItem\";\n\nimport \"../resources/styles/SideBar.scss\";\n\nclass SideBar extends Component {\n  state = {\n    element: this.props.element,\n    actions: [\"Action1\", \"Action2\", \"Action3\"]\n  };\n\n  getTypeOfSidebar() {\n    return this.props.element === null ? (\n      <SideBarInitial\n        itemsFlat = {this.props.itemsFlat}\n        onClickSearch={this.props.onClickSearch}\n        onClickRequest={this.props.onClickRequest}\n        notifications={this.props.notifications}\n        items={this.props.items}\n        onClickNotifications={this.props.onClickNotifications}\n      />\n    ) : this.props.element.type === \"item\" ? (\n      <SideBarItem\n        itemsFlat = {this.props.itemsFlat}\n        element={this.props.element}\n        onClickDiscardSearch={() => {\n          this.props.onClickDiscardSearch();\n          this.props.onToggleMobileDrawer(\"close\");\n        }}\n        onActionConfirmation={this.props.onActionConfirmation}\n        onClickFew={this.props.onClickFew}\n      />\n    ) : (\n      <SideBarCategory\n        itemsFlat = {this.props.itemsFlat}\n        element={this.props.element}\n        onClickDiscardSearch={() => {\n          this.props.onClickDiscardSearch();\n          this.props.onToggleMobileDrawer(\"close\");\n        }}\n      />\n    );\n  }\n  render() {\n    return (\n      <div id=\"SideBar\">\n        <SideBarHeader\n          onToggleMobileDrawer={this.props.onToggleMobileDrawer}\n        />\n        {this.getTypeOfSidebar()}\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport \"../resources/styles/Nav.scss\";\nimport Logo from \"./../resources/images/logo.svg\";\n\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.pressed = 0;\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = {\n      inputValue: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    document.addEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    document.removeEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      // console.log(\"You clicked outside of me!\");\n      this.props.discardSearch();\n    }\n    // if (this.wrapperRef && this.wrapperRef.contains(event.target))\n    //   console.log(\"You clicked inside of me ;) !\" + this.pressed);\n  }\n\n  onClickGoBack = ID => {\n    this.props.onClickGoBack(\n      this.getParent(this.props.element.ID, this.props.elements)\n    );\n  };\n\n  onClickOption = ID => {\n    this.props.onClickOption(ID.ID);\n  };\n\n  updateInputValue(evt) {\n    //console.log(evt.target.value);\n    this.setState({\n      inputValue: evt.target.value\n    });\n  }\n\n  render() {\n    let style = { right: \"238px\" };\n\n    return (\n      <nav className=\"NavBar\">\n        <div className=\"logo\">\n          <img alt=\"Logo\" src={Logo} />\n        </div>\n\n        <div className=\"body\">\n          {this.props.element !== null ? (\n            <button\n              className=\"button goBack\"\n              onClick={() => {\n                this.onClickGoBack(\n                  this.getParent(this.props.element.ID, this.props.elements)\n                );\n              }}\n            >\n              <i className=\"material-icons\"> arrow_back</i>\n            </button>\n          ) : null}\n          <button\n            className=\"button notifications\"\n            onClick={() => this.props.onToggleNotificationPopup()}\n          >\n            <i className=\"material-icons\"> notifications</i>\n          </button>\n          <div className=\"searchBar\">\n            <input\n              placeholder=\"Search for a specific item\"\n              onClick={() => this.props.onClickNavBar()}\n              value={this.state.inputValue}\n              onChange={evt => this.updateInputValue(evt)} //Apelam pentru a salva inputul din search bar\n            />\n            <i className=\"material-icons search-icon\">search</i>\n            {this.props.navBarClick ? ( // Verificam daca a fost apasat searchBarul\n              <div\n                id=\"search-list\"\n                {...(this.props.element ? (style = { style }) : null)} // Verificam daca avem buton de GoBack\n                ref={this.setWrapperRef}\n              >\n                {this.searchBarItems(this.props.elements, 0)}\n              </div>\n            ) : null}\n          </div>\n          <button\n            onClick={() => {\n              this.props.onToggleMobileDrawer();\n            }}\n            className=\"button menu\"\n          >\n            <i className=\"material-icons\">menu</i>\n          </button>\n        </div>\n      </nav>\n    );\n  }\n\n  searchBarItems(element, flag) {\n    let ID = 0;\n    if (flag === 0) return element.map(element => this.searchBarItems(element, 1));\n    else {\n      //console.log(element);\n      return element.elements.map(element =>\n        element.type === \"item\" ? (\n          this.searchInName(element.name) ? ( //Verificam daca string-ul din input se regaseste in numele item-elor\n            ID < 6 ? ( //Limitam lista la 6 iteme\n              <div\n                key={++ID}\n                className=\"searchItem\"\n                onClick={() => {\n                  this.onClickOption(element);\n                  this.props.discardSearch();\n                }}\n              >\n                <img\n                  alt=\"Item\"\n                  src={element.image}\n                />\n                <p>{\" \" + element.name}</p>\n                <div className=\"btn\">\n                  <i className=\"material-icons\">play_arrow</i>\n                </div>\n              </div>\n            ) : null\n          ) : null\n        ) : (\n          this.searchBarItems(element, 1)\n        )\n      );\n    }\n  }\n\n  resetValue = () => {\n    this.setState({ inputValue: \"\" });\n  };\n\n  searchInName = name => {\n    name = name.toLowerCase();\n    if (name.indexOf(this.state.inputValue.toLowerCase()) !== -1) return true;\n    return false;\n  };\n\n  getParent = (ID, V) => {\n    let found = null;\n    if (ID.parentID !== null) {\n      for (let j = 0; j < V.length; j++) {\n        for (let i = 0; i < V[j].elements.length; i++) {\n          if (ID === V[j].elements[i].ID) {\n            return V[j];\n          }\n        }\n        if (V[j].type !== \"item\") {\n          found = this.getParent(ID, V[j].elements);\n          if (found !== null) break;\n        }\n      }\n    }\n    return found;\n  };\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport Config from \"./../config\"\nimport AppContext from \"./../model/AppContext\"\n\n\nimport \"../resources/styles/RequestPopup.scss\";\nimport axios from \"axios\";\nclass RequestItemPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n\n    this.request_name = React.createRef();\n    this.request_description = React.createRef();\n    this.request_badge = React.createRef();\n\n    this.request_modal = React.createRef();\n\n\n\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    document.addEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    document.removeEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      console.log(\"You clicked outside of me!\");\n      this.props.togglePopup();\n    }\n  }\n\n  doRequest(){\n    let self = this;\n\n\n    let name = this.request_name.current.value;\n    let description = this.request_description.current.value;\n    let badge = this.request_badge.current.value;\n\n    let flag = false;\n\n    if(Config.isEmpty(name)){ if(!this.request_name.current.classList.contains(\"warn\"))  this.request_name.current.classList.add(\"warn\");flag = true;}\n    else if(this.request_name.current.classList.contains(\"warn\")) this.request_name.current.classList.remove(\"warn\");\n\n\n    if(Config.isEmpty(description)){if(!this.request_description.current.classList.contains(\"warn\")) this.request_description.current.classList.add(\"warn\");flag = true;}\n    else if(this.request_description.current.classList.contains(\"warn\")) this.request_description.current.classList.remove(\"warn\");\n\n    badge = Config.isEmpty(badge) ? \"-\" : badge;\n\n    if(flag === true) return;\n\n\n    this.context.startLoading();\n    if(!this.request_modal.current.classList.contains(\"loading\")) this.request_modal.current.classList.add(\"loading\");\n\n\n\n\n\n    return new Promise((resolve, reject) => {\n      axios.post(Config.API_REQUEST_SEND,{\n        stationId: self.context.station.id,\n        name : name,\n        description : description,\n        badge : badge\n      })\n          .then((response) => {\n            try {\n              console.log(response);\n              let status = response[\"status\"];\n              if (parseInt(status) === Config.HTTP_REQUEST_STATUS_OK || parseInt(status) === Config.HTTP_REQUEST_STATUS_CREATED ){\n                  console.log(\"[OK] Product request was successful!\");\n                  self.context.stopLoading();\n                  if(this.request_modal.current.classList.contains(\"loading\")) this.request_modal.current.classList.remove( \"loading\");\n                  this.props.onSubmit();\n              }\n              else console.log(\"Product request encountered errors.\")\n            }catch (e) {\n              console.error(\"Product request failed.\");\n              console.error(e);\n              reject();\n            }\n          })\n          .catch((error) => {\n            console.error(\"Product request failed miserably.\");\n            console.error(error.response);\n            self.context.stopLoading();\n            if(this.request_modal.current.classList.contains(\"loading\")) this.request_modal.current.classList.remove( \"loading\");\n            reject();\n           })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"RequestPopup\" ref={this.request_modal}>\n        <div className=\"inner\" >\n          <div className=\"card\" ref={this.setWrapperRef}>\n            <div className=\"container\">\n          <div className=\"header\">\n            <h2>Request new item</h2>\n            <div className=\"button return\" onClick={() => this.props.togglePopup()}>\n              Return to dashboard\n            </div>\n          </div>\n\n          <p>\n            Fill in the form with the information about a new product you would\n            like to see at this shared station.\n          </p>\n          <p>\n            Management will be notified about your request and it will be taken\n            into account.\n          </p>\n            <form>\n              <div className=\"field\">\n\n                <label htmlFor=\"request_name\">1. Name of the item *</label>\n                <input id=\"request_name\"  ref={this.request_name} type=\"text\" placeholder=\"e.g. A special kind of sugar\"/>\n              </div>\n\n              <div className=\"field\">\n                <label htmlFor=\"request_description\">2. Description of product and reason for request *</label>\n                <input id=\"request_description\" ref={this.request_description} type=\"text\" placeholder=\"Why would you like to make this product available?\" />\n              </div>\n\n              <div className=\"field\">\n                <label htmlFor=\"request_badge\">3. Your name or badge ID</label>\n                <input id=\"request_badge\" ref={this.request_badge} type=\"text\" placeholder=\"This will help organise the requests and move faster\"/>\n              </div>\n            </form>\n          <div className=\"footer\">\n            <div className=\"button cancel\" onClick={() => this.props.togglePopup()}>\n              <div className=\"content\">\n                <p>Cancel request</p>\n              </div>\n            </div>\n            <div className=\"button submit\" onClick={() => {this.doRequest();}} >\n              <div className=\"content\">\n                <p>Request Product</p>\n              </div>\n            </div>\n          </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRequestItemPopup.contextType = AppContext;\nexport default RequestItemPopup;\n","import React, { Component } from \"react\";\nimport \"../resources/styles/ActionItemPopupConfirmation.scss\";\nimport AppContext from \"../model/AppContext\";\n\nclass ActionItemPopupConfirmation extends Component {\n\n  componentDidMount() {\n    this.context.doChangeIsSafeToUpdateUniverse(true);\n    setTimeout(()=>{\n      this.context.doUpdateUniverse();\n      this.props.togglePopup(true);\n      this.props.onReturnToDashboard();\n    }, 4000);\n  }\n\n  render() {\n    return (\n      <div className=\"ActionItemPopupConfirmation\">\n        <div className=\"inner\" >\n          <div className=\"card\">\n            <div className=\"container\">\n          <div className=\"header\">\n            <i className=\"material-icons\">check</i>\n            <h2>Thank you for your input</h2>\n          </div>\n          <p>\n            Management has been notified about this. The issue will be fixed as soon as possible. Thank you!\n          </p>\n          <div className=\"button return\">\n            Returning to dashboard...\n          </div>\n\n          <div className=\"footer\">\n            <div className=\"loader\"><div className=\"inner\"/></div>\n          </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nActionItemPopupConfirmation.contextType = AppContext;\nexport default ActionItemPopupConfirmation;\n","import React, { Component } from \"react\";\nimport \"../resources/styles/FewLeftPopup.scss\";\n\nclass FewLeftPopup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  state = {\n    input: \"\",\n    valid : false\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    document.addEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    document.removeEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.togglePopup();\n    }\n  }\n\n  backSpace = () => {\n    this.setState({\n      input: this.state.input.slice(0, -1)\n    });\n    this.updateValid();\n  };\n  clear = () => {\n    this.setState({\n      input: \"\"\n    });\n    this.updateValid();\n  };\n\n  onClick = button => {\n    this.setState({\n      input: this.state.input + button\n    });\n    this.updateValid();\n  };\n\n  updateValid = () => {\n    this.setState((state,props) => ({\n      valid : (state.input !== null && state.input !== \"\")\n    }));\n  };\n\n  createKeys(){\n    let keys = [];\n    keys.push(this.createKey(7));\n    keys.push(this.createKey(8));\n    keys.push(this.createKey(9));\n    keys.push(this.createKey(4));\n    keys.push(this.createKey(5));\n    keys.push(this.createKey(6));\n    keys.push(this.createKey(1));\n    keys.push(this.createKey(2));\n    keys.push(this.createKey(3));\n    keys.push(this.createKey(0));\n    keys.push( <div key=\"backspace\" className=\"red\" ><i onClick={() => this.backSpace()} className=\"material-icons\">backspace</i></div>);\n    keys.push( <div key=\"clear\" className=\"red\"><span onClick={() => this.clear()}>C</span></div>);\n    return keys;\n  }\n\n  createKey(digit){\n   return <div key={digit} > <span onClick={ () => this.onClick(digit)}>{digit}</span> </div>;\n  }\n\n  render() {\n    return (\n      <div className=\"FewLeftPopup\">\n        <div className=\"inner\">\n          <div className=\"card\" ref={this.setWrapperRef}>\n            <div className=\"container\">\n              <div className=\"header\">\n                <h2>Insert the number of items left</h2>\n                <div\n                  className=\"button return\"\n                  onClick={() => this.props.togglePopup()}\n                >\n                  Return\n                </div>\n              </div>\n\n              <div className=\"display\">\n                <p>{this.state.input}</p>\n              </div>\n\n              <div className=\"keyboard\">\n                {this.createKeys()}\n\n\n              </div>\n\n              <div className=\"footer\">\n                <div\n                  className=\"button submit\" data-active={this.state.valid}\n                  onClick={() => {this.props.onConfirm(this.state.input)}}\n                >\n                  <div className=\"content\">\n                    <p>Confirm</p>\n                  </div>\n                </div>\n                <div\n                  className=\"button cancel\"\n                  onClick={() => this.props.togglePopup()}\n                >\n                  <div className=\"content\">\n                    <p>Cancel</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FewLeftPopup;\n","import React, { Component } from \"react\";\n\n\nimport \"../resources/styles/AllNotificationsPopup.scss\";\nimport Config from \"../config\";\nimport SNotification from \"../model/SNotification\";\n\nclass AllNotificationsPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    document.addEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    document.removeEventListener(\"touchstart\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.togglePopup();\n    }\n  }\n\n  getItemNameById = ID => {\n    return !Config.isEmpty(this.props.itemsFlat)\n        && this.props.itemsFlat.hasOwnProperty(ID) ? this.props.itemsFlat[ID].name : null;\n  };\n\n\n  printDate = notification => {\n    return (SNotification.parseDate(notification[\"createdAt\"]));\n  };\n\n\n  sortNotifications = notifications => {\n    let ok = true;\n    do {\n      ok = true;\n      for (let i = 0; i < notifications.length - 1; i++) {\n        if (\n          this.printDate(notifications[i]) <\n          this.printDate(notifications[i + 1])\n        ) {\n          ok = false;\n          let aux = notifications[i];\n          notifications[i] = notifications[i + 1];\n          notifications[i + 1] = aux;\n        }\n      }\n    } while (!ok);\n    return notifications;\n  };\n\n  render() {\n    let i = 0;\n    return (\n      <div className=\"AllNotificationsPopup\">\n        <div className=\"inner\">\n          <div className=\"card\" ref={this.setWrapperRef}>\n            <div className=\"container\">\n              <div className=\"header\">\n                <h4>Notifications</h4>\n                <div\n                  className=\"button return\"\n                  onClick={() => {\n                    this.props.togglePopup();\n                  }}\n                >\n                  Return\n                </div>\n              </div>\n              <div className=\"notifications\">\n                {this.sortNotifications(this.props.notifications).map(\n                  notification => (\n                    <div key={++i} className=\"notification-item\">\n                      <div className=\"header\">\n                        <p>{this.getItemNameById(notification.elementId)}</p>\n                        <p className=\"time\">\n                          {this.printDate(notification).toString()}\n                        </p>\n                      </div>\n                      <div className=\"notification-item-message\">\n                        <h6>\n                          {notification.type === \"from_management\"\n                            ? \"From management: \"\n                            : null}{\" \"}\n                          {notification.content}\n                        </h6>\n                      </div>\n                      <div className=\"divider\" />\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllNotificationsPopup;\n","import React, { Component } from \"react\";\nimport Config from \"./config\";\nimport \"./resources/styles/App.scss\";\nimport Main from \"./Components/Main\";\nimport SideBar from \"./Components/SideBar\";\nimport NavBar from \"./Components/NavBar\";\nimport RequestItemPopup from \"./Components/RequestItemPopup\";\nimport Element from \"./model/Element\";\nimport ActionItemPopupConfirmation from \"./Components/ActionItemPopupConfirmation\";\nimport FewLeftPopup from \"./Components/FewLeftPopup\";\nimport AllNotificationsPopup from \"./Components/AllNotificationsPopup\";\nimport AppContext from './model/AppContext'\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      initial : null,\n      station : {},\n      drawer_visible: false,\n      elements: [],\n      items: [],\n      itemsFlat : {},\n      notifications: [],\n      chosen: null,\n      navBarClick: false,\n      showRequestPopup: false,\n      showFewLeftPopup: false,\n      showActionConfirmationPopup: false,\n      timeoutActionConfirmationPopup: null,\n      showNotificationsPopup: false,\n      loading : false,\n      isSafeToUpdateUniverse : true,\n    };\n  }\n\n  componentDidMount() {\n\n    this.setState({loading : true});\n    this.doUpdateUniverse().then(()=> {\n       this.setState({loading : false});\n    });\n\n\n    setInterval(() => {this.doUpdateUniverse()}, 30000);\n\n\n\n  }\n\n\n\n\n\n  /**\n   * ------\n   */\n\n  toggleRequestPopup = () => {\n    this.setState({ showRequestPopup: !this.state.showRequestPopup });\n  };\n\n  toggleFewLeftPopup = () => {\n    this.setState({ showFewLeftPopup: !this.state.showFewLeftPopup });\n  };\n\n  toggleActionConfirmationPopup = (force = null) => {\n    this.setState({\n      showActionConfirmationPopup: (force !== null ? (force === 'open') : (!this.state.showActionConfirmationPopup))\n    });\n  };\n\n  toggleNotificationsPopup = () => {\n    this.setState({\n      showNotificationsPopup: !this.state.showNotificationsPopup\n    });\n  };\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n\n    return (\n        <AppContext.Provider value={Config.generateAppContextValues(this)} >\n            <div id=\"App\">\n              <div className=\"App-container\">\n                <div className=\"App-left\">\n                  <NavBar\n                    onClickNavBar={this.onNavBarClick}\n                    onClickGoBack={this.onClickGoBack}\n                    element={this.state.chosen}\n                    elements={this.state.elements}\n                    navBarClick={this.state.navBarClick}\n                    discardSearch={this.discardSearch}\n                    onClickOption={this.onClickOption}\n                    onToggleMobileDrawer={this.onToggleMobileDrawer}\n                    onToggleNotificationPopup={this.toggleNotificationsPopup}\n                  />\n                  <Main\n                    onItemClick={this.onItemClick}\n                    elements={this.state.elements}\n                    chosen={this.state.chosen}\n                  />\n                </div>\n                <div className=\"App-right\" data-visible={this.state.drawer_visible}>\n                  <SideBar\n                    itemsFlat = {this.state.itemsFlat}\n                    element={this.state.chosen}\n                    items={this.state.items}\n                    notifications={this.state.notifications}\n                    onClickDiscardSearch={this.onClickDiscardSearch}\n                    onClickSearch={this.onNavBarClick}\n                    onClickRequest={this.toggleRequestPopup}\n                    onActionConfirmation={this.toggleActionConfirmationPopup}\n                    onToggleMobileDrawer={this.onToggleMobileDrawer}\n                    onClickFew={this.toggleFewLeftPopup}\n                    onClickNotifications={this.toggleNotificationsPopup}\n                  />\n                </div>\n                {this.state.showRequestPopup ? (\n                  <RequestItemPopup\n                    togglePopup={this.toggleRequestPopup}\n                    onSubmit={this.onRequestSubmit}\n                  />\n                ) : null}\n\n                {this.state.showActionConfirmationPopup ? (\n                  <ActionItemPopupConfirmation\n                    togglePopup={this.toggleActionConfirmationPopup}\n                    onReturnToDashboard={() => {\n                      this.onItemClick(null);\n                      this.toggleActionConfirmationPopup(\"close\");\n                    }}\n                  />\n                ) : null}\n\n                {this.state.showFewLeftPopup ? (\n                  <FewLeftPopup\n                    togglePopup={this.toggleFewLeftPopup}\n                    onConfirm={this.onFewLeftSubmit}\n                  />\n                ) : null}\n\n                {this.state.showNotificationsPopup ? (\n                  <AllNotificationsPopup\n                    togglePopup={this.toggleNotificationsPopup}\n                    notifications={this.state.notifications}\n                    items={this.state.items}\n                    itemsFlat={this.state.itemsFlat}\n                  />\n                ) : null}\n\n                <div className={\"AppLoader \" + (this.state.loading ? \"active\" : \"\") }><div><p>Loading...</p></div></div>\n              </div>\n            </div>\n        </AppContext.Provider>\n    );\n  }\n\n  onClickOption = ID => {\n    this.setState((state, props) => ({\n      chosen: (() => {\n        return this.onItemClickMaiSmechera(ID, state.elements)[\"chosen\"];\n      })()\n    }));\n  };\n\n  onClickGoBack = ID => {\n    //console.log(ID);\n    if (ID !== null) {\n      if (ID.parentID !== null) {\n        //console.log(ID.parentID);\n        this.setState((state, props) => ({\n          chosen: (() => {\n            return this.onItemClickMaiSmechera(ID.parentID, state.elements)[\n              \"chosen\"\n            ];\n          })()\n        }));\n      } else {\n        this.setState((state, props) => ({\n          chosen: (() => {\n            return this.onItemClickMaiSmechera(ID.ID, state.elements)[\"chosen\"];\n          })()\n        }));\n      }\n    } else {\n      this.setState((state, props) => ({\n        chosen: (() => {\n          return this.onItemClickMaiSmechera(ID, state.elements)[\"chosen\"];\n        })()\n      }));\n    }\n  };\n\n  onItemClickMaiSmechera = (ID, V) => {\n    let found = null;\n    if (V !== null) {\n      for (let i = 0; i < V.length; i++) {\n        V[i].chosen = false;\n        if (String(V[i].ID) === String(ID)) {\n          V[i].chosen = V[i].type === Config.ELEMENT_TYPE_ITEM;\n          return {\n            chosen: V[i],\n            elements: V\n          };\n        } else if (V[i].type !== Config.ELEMENT_TYPE_ITEM)\n          found = this.onItemClickMaiSmechera(ID, V[i].elements)[\"chosen\"];\n        if (found !== null) break;\n      }\n    }\n    return {\n      chosen: found,\n      elements: V\n    };\n  };\n\n  onItemClick = ID => {\n    let elements = this.onItemClickMaiSmechera(\n      \"Use this recursive function to make every chosen flag false\",\n      this.state.elements\n    )[\"elements\"];\n    let object = this.onItemClickMaiSmechera(ID, elements);\n    let item = object.chosen;\n    if (item && item.type === Config.ELEMENT_TYPE_ITEM) {\n      this.onToggleMobileDrawer(\"open\");\n    }\n\n    this.setState((previousState, props) => {\n      return {\n        elements: object.elements,\n        chosen: (() => {\n          return item;\n        })()\n      };\n    });\n  };\n\n  onClickDiscardSearch = () => {\n    const chosen = null;\n\n    this.setState({ chosen, navBarClick: false });\n  };\n\n  discardSearch = () => {\n    this.setState({ navBarClick: false });\n  };\n\n  onNavBarClick = () => {\n    this.setState({\n      drawer_visible: false,\n      navBarClick: true\n    });\n  };\n\n  onRequestSubmit = () => {\n    /**\n     * gets the input from the fields in the request item form\n     */\n    this.toggleRequestPopup();\n    this.toggleActionConfirmationPopup();\n  };\n\n  onFewLeftSubmit = amount => {\n    if (amount === \"\") alert(\"No amount inserted!\");\n    else {\n      this.doNotificationSend({itemId : this.state.chosen.ID, quantity: amount});\n      this.toggleFewLeftPopup();\n      this.toggleActionConfirmationPopup();\n    }\n  };\n  onToggleMobileDrawer = (force = null) => {\n    this.setState((state, props) => ({\n      drawer_visible: force !== null ? force === \"open\" : !state.drawer_visible\n    }));\n  };\n\n\n\n  doUpdateUniverse  = () => {\n\n    console.log(this);\n    let self = this;\n\n    console.log(\"Updating universe...\");\n    if(!self.state.isSafeToUpdateUniverse){\n      console.log(\"Universe not safe to update.\");\n      return new Promise((resolve)=>{resolve();});\n    }\n\n    return new Promise( (resolve, reject) => {\n\n      let request = Config.loadElementsFromAPI();\n\n      request\n          .then((data) => {\n\n            if(self.state.initial !== undefined && self.state.initial !== null){\n              if(JSON.stringify(self.state.initial) ===  JSON.stringify(data)){\n                console.log(\"Universe was already up to date.\");\n                resolve();\n                return;\n              }\n            }\n\n            let elements = (()=>{\n              try {\n                let elements = data[\"elements\"];\n                if (elements) {\n                  let data = [];\n                  for (let i = 0; i < elements.length; i++) {\n                    data.push(new Element(elements[i]));\n                  }\n                  return data;\n                }\n              } catch (e) {\n                console.error(e);\n                return [];\n              }\n            })();\n            let items = Config.loadItems(elements);\n            let notifications = Config.loadNotifications(items);\n\n            let station = {\n              id : !Config.isEmpty(data[\"id\"]) ? data[\"id\"] : null,\n              name : !Config.isEmpty(data[\"name\"]) ? data[\"name\"] : null,\n              description : !Config.isEmpty(data[\"description\"]) ? data[\"description\"] : null,\n              image : !Config.isEmpty(data[\"image\"]) ? data[\"image\"] : null,\n              floor : !Config.isEmpty(data[\"floor\"]) ? data[\"floor\"] : null,\n            };\n\n            self.setState({\n              initial : data,\n              itemsFlat : Config.flattenElements(items),\n              station : station,\n              drawer_visible: false,\n              elements: elements,\n              items: items,\n              notifications: notifications,\n              chosen: null,\n              navBarClick: false,\n              showRequestPopup: false,\n              showFewLeftPopup: false,\n              showActionConfirmationPopup: false,\n              timeoutActionConfirmationPopup: null,\n              showNotificationsPopup: false,\n              loading : false,\n            });\n            resolve();\n          })\n          .catch( () => {\n            self.setState({loading : false});\n            reject();\n          })\n    });\n  };\n\n  doNotificationSend = (data) => {\n\n    let self = this;\n\n\n    self.setState({\n      loading : true,\n      isSafeToUpdateUniverse : false\n    });\n\n\n\n\n\n    return new Promise((resolve, reject) => {\n      axios.post(Config.API_NOTIFICATION_SEND,{\n        stationId: self.state.station.id,\n        elementId : data.itemId,\n        quantity : Config.isEmpty(data.quantity) ? 0 : data.quantity,\n      })\n          .then((response) => {\n            try {\n              console.log(response);\n              let status = response[\"status\"];\n              if (parseInt(status) === Config.HTTP_REQUEST_STATUS_OK || parseInt(status) === Config.HTTP_REQUEST_STATUS_CREATED ){\n                console.log(\"[OK] SNotification was successful!\");\n              }\n              else console.log(\"SNotification encountered errors.\")\n            }catch (e) {\n              console.error(\"SNotification failed.\");\n              console.error(e);\n              reject();\n            }\n          })\n          .catch((error) => {\n            console.error(\"SNotification failed miserably.\");\n            console.error(error);\n            reject();\n          })\n          .finally(() => {\n            self.setState({\n              loading: false,\n            });\n          });\n    })\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}